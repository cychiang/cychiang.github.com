<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | The memo blog.]]></title>
  <link href="http://cychiang.github.com/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://cychiang.github.com/"/>
  <updated>2013-02-18T11:28:19+08:00</updated>
  <id>http://cychiang.github.com/</id>
  <author>
    <name><![CDATA[Casper Chiang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python: Memo(I)]]></title>
    <link href="http://cychiang.github.com/blog/2013/02/09/python-memo-i/"/>
    <updated>2013-02-09T19:35:00+08:00</updated>
    <id>http://cychiang.github.com/blog/2013/02/09/python-memo-i</id>
    <content type="html"><![CDATA[<p>荒廢了過年這段時間，這次要來研究一下別人寫的<code>Python</code>程式，主要用來取得Google Map的影像，並且可以把它存起來。因為某些原因，所以需要對<code>Google Map</code>進行存取地圖，除了存取地圖，也需要來計算每個地圖的大小，詳細的參考網站可以參考<a href="http://www.maptiler.org/google-maps-coordinates-tile-bounds-projection/">Tiles à la Google Maps: Coordinates, Tile Bounds and Projection</a>關於<a href="http://www.cnblogs.com/LionGG/archive/2009/04/20/1439905.html">Google Map投影說明</a>可以參考這邊。而在我想要進行的應用當中，主要有幾個部份，<code>Google Map</code>在設定大小的時候，所出現的圖片其大小都是固定的，所以在這邊想要把每個圖片都弄幾個狀態，然而<code>Zoom in</code>的<code>level</code>設定在<code>21</code>左右，主要的應用，想要利用在某些用途上，總之，需要的功能為：</p>

<ul>
<li>取得使用者的<code>GPS</code>資訊</li>
<li>使用者<code>GPS</code>資訊對應到<code>Google Map</code>的編號</li>
<li><code>Google Map</code>每個區塊邊界取得</li>
</ul>


<p>剩下的有些就是需要資料庫的幫忙了，接著最後目標就是要放到<code>GAE</code>上面，然後提供給<code>Android</code>來服務。那在這邊有兩個網路上找的<code>Sample code</code>，就來慢慢<code>Trace</code>。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>pyMapGrab.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">final</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s">&quot;RGB&quot;</span><span class="p">,</span> <span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">dx</span><span class="p">),</span> <span class="nb">int</span><span class="p">(</span><span class="n">dy</span><span class="p">)))</span>
</span><span class='line'><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">cols</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">rows</span><span class="p">):</span>
</span><span class='line'>    <span class="n">dxn</span> <span class="o">=</span> <span class="n">largura</span> <span class="o">*</span> <span class="p">(</span><span class="mf">0.5</span> <span class="o">+</span> <span class="n">x</span><span class="p">)</span>
</span><span class='line'>    <span class="n">dyn</span> <span class="o">=</span> <span class="n">altura</span> <span class="o">*</span> <span class="p">(</span><span class="mf">0.5</span> <span class="o">+</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>    <span class="n">latn</span><span class="p">,</span> <span class="n">lonn</span> <span class="o">=</span> <span class="n">pixelstolatlon</span><span class="p">(</span><span class="n">ulx</span> <span class="o">+</span> <span class="n">dxn</span><span class="p">,</span> <span class="n">uly</span> <span class="o">-</span> <span class="n">dyn</span> <span class="o">-</span> <span class="n">bottom</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">zoom</span><span class="p">)</span>
</span><span class='line'>    <span class="n">position</span> <span class="o">=</span> <span class="s">&#39;,&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">((</span><span class="nb">str</span><span class="p">(</span><span class="n">latn</span><span class="p">),</span> <span class="nb">str</span><span class="p">(</span><span class="n">lonn</span><span class="p">)))</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">position</span>
</span><span class='line'>    <span class="n">urlparams</span> <span class="o">=</span> <span class="n">urllib</span><span class="o">.</span><span class="n">urlencode</span><span class="p">({</span><span class="s">&#39;center&#39;</span><span class="p">:</span> <span class="n">position</span><span class="p">,</span>
</span><span class='line'>                                  <span class="s">&#39;zoom&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">zoom</span><span class="p">),</span>
</span><span class='line'>                                  <span class="s">&#39;size&#39;</span><span class="p">:</span> <span class="s">&#39;</span><span class="si">%d</span><span class="s">x</span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">largura</span><span class="p">,</span> <span class="n">alturaplus</span><span class="p">),</span>
</span><span class='line'>                                  <span class="s">&#39;maptype&#39;</span><span class="p">:</span> <span class="s">&#39;satellite&#39;</span><span class="p">,</span>
</span><span class='line'>                                  <span class="s">&#39;sensor&#39;</span><span class="p">:</span> <span class="s">&#39;false&#39;</span><span class="p">,</span>
</span><span class='line'>                                  <span class="s">&#39;scale&#39;</span><span class="p">:</span> <span class="n">scale</span><span class="p">})</span>
</span><span class='line'>    <span class="n">url</span> <span class="o">=</span> <span class="s">&#39;http://maps.google.com/maps/api/staticmap?&#39;</span> <span class="o">+</span> <span class="n">urlparams</span>
</span><span class='line'>    <span class="n">f</span><span class="o">=</span><span class="n">urllib</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>    <span class="n">im</span><span class="o">=</span><span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">StringIO</span><span class="o">.</span><span class="n">StringIO</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()))</span>
</span><span class='line'>    <span class="n">final</span><span class="o">.</span><span class="n">paste</span><span class="p">(</span><span class="n">im</span><span class="p">,</span> <span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="o">*</span><span class="n">largura</span><span class="p">),</span> <span class="nb">int</span><span class="p">(</span><span class="n">y</span><span class="o">*</span><span class="n">altura</span><span class="p">)))</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">final</span><span class="o">.</span><span class="n">show</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>這算是主要的<code>main loop</code>，首先就是要建立一張超大的空白圖，這就是使用<code>PIL（Python Image Library）</code>，在安裝上還算方便。只是也同樣需要設定一下就是了，不然會找不到<code>Image.new()</code>。這一整段的程式，拆開來執行就是每次截取一小段圖片，後一直拼拼拼成一張大張的圖，這些圖當然都是<code>Google Map</code>提供的。在傳送網址的詳細參數，可以參考<a href="https://developers.google.com/maps/documentation/staticmaps/?hl=zh-tw">Google Map Static API</a>，似乎有很多參數可以選擇…時間上的關係，需要來加緊趕工<code>vuforia</code>的程式了。之後再來慢慢補完這些要研究的東西。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google App Engine: Memo(I)]]></title>
    <link href="http://cychiang.github.com/blog/2013/02/07/google-app-engine-memo-i/"/>
    <updated>2013-02-07T14:23:00+08:00</updated>
    <id>http://cychiang.github.com/blog/2013/02/07/google-app-engine-memo-i</id>
    <content type="html"><![CDATA[<p>講了很久的<a href="https://developers.google.com/appengine/">Google App Engine(GAE)</a>，隨著今年的目標，一定要給他學會它，並且可以順利地寫出我要的功能！其實整個來講並沒有什麼太大的問題，唯一有一個要注意的就是。</p>

<h1>最好每個檔案名稱千萬不要有大寫的存在！</h1>

<p>只要記住這個，我想應該都沒有什麼問題。
其實在設定<code>GAE</code>的開發環境其實沒有什麼特別問題，我想這邊設定之類的就先跳過。那其實在安裝<code>PyDev</code>的時候，就已經有預設有<code>GAE</code>的開發選項，所以應該也不是什麼太大問題。<a href="https://github.com/cychiang/pyGMapEngine">Sample code</a>也放在<a href="https://github.com/">github</a>上，基本上就是<code>GAE</code>的範例程式。那這邊先把過程了解的部份紀錄一下。首先有兩個<code>Code</code>一個<code>pygmapengine.py</code>另外一個<code>app.yaml</code>內容分別為：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>pygmapengine.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">webapp2</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">MainPage</span><span class="p">(</span><span class="n">webapp2</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">response</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="s">&#39;Content-Type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;text/plain&#39;</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">response</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;pyGMapMain-Hello&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">app</span> <span class="o">=</span> <span class="n">webapp2</span><span class="o">.</span><span class="n">WSGIApplication</span><span class="p">([(</span><span class="s">&#39;/&#39;</span><span class="p">,</span> <span class="n">MainPage</span><span class="p">)],</span> <span class="n">debug</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在<code>pygmapengine.py</code>裡面，主要用的是<a href="http://webapp-improved.appspot.com/">webapp2</a>的套件，細節怎樣使用我覺得以後再來慢慢研究好了，這部分先求會動就好。看起來就很像是建立一個<code>MainPage</code>然後裡面寫一個<code>pyGmapMain-Hello</code>的字串，應該就只有這樣而已。在<code>app.yaml</code>這部分似乎是比較重要的，因為在GAE讀取建立的時候，這是一個<code>config</code>檔。在這個<a href="https://developers.google.com/appengine/docs/python/config/appconfig">app.yaml</a>也有參考可以看。首先<code>application:</code>說明為<code>The application identifier. This is the identifier you selected when you created the application in the Administration Console.</code>，那可以知道的事情就是，就一定要跟你在<code>GAE</code>的管理界面是一致的，這樣在上傳的時候才對的起來。那我在<code>GAE</code>建立的也是<code>pygmapengine</code>所以沒問題，之後程式可以在<a href="http://pygmapengine.appspot.com/">這裡</a>看到。<code>version:</code>似乎是版本？在更動的時候應該也會同時變動管理界面的版本才對，看說明也是如此。<code>runtime:</code>就所用的<code>Python Interprer</code>的版本，那在<code>GAE</code>上目前支援到<code>2.7</code>。<code>api_version:</code>這部分好像是說，用的<code>GAE</code>的<code>API</code>版本，在說明上目前好像都是<code>1</code>之後如果想要升級只要改改這個部份就好了。<code>threadsafe:</code>，看起來好像是什麼執行緒安全？說明是這樣<code>Configures your application to use concurrent requests.</code>應該是能不能支援<code>cncurrent requests</code>。最後終於<code>handlers:</code>這部份感覺有點複雜，因為要設定的東西似乎是網頁的路徑之類的，這部分留到未來慢慢研究好了。主要的說明在這邊<a href="https://developers.google.com/appengine/docs/python/config/appconfig#Script_Handlers">Script_Handlers</a>，似乎好像也沒有很多中文網站來討論這些設定問題。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>pygmapengine.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">&lt;p&gt;application</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">pygmapengine</span>
</span><span class='line'><span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'><span class="l-Scalar-Plain">runtime</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">python27</span>
</span><span class='line'><span class="l-Scalar-Plain">api_version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'><span class="l-Scalar-Plain">threadsafe</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">&lt;p&gt;handlers</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/.*</span>
</span><span class='line'>  <span class="l-Scalar-Plain">script</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">pygmapengine.app&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最後我想會直接開始寫個<code>JSON</code>範例用來存取吧！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python: GUI Programming-II]]></title>
    <link href="http://cychiang.github.com/blog/2013/02/03/python-gui-programming-ii/"/>
    <updated>2013-02-03T10:06:00+08:00</updated>
    <id>http://cychiang.github.com/blog/2013/02/03/python-gui-programming-ii</id>
    <content type="html"><![CDATA[<p>最近找了一些關於Google map應用的Python程式，除了加強自己的Python技巧也多參考一下別人怎樣寫。之後要來研究一下<a href="http://www.pythonware.com/products/pil/">PIL:Python Image Library</a>，安裝其實很簡單，只要用<code>brew install pil</code>就搞定，該怎樣用？之後會再來慢慢研究，這邊只是提到有這東西，不過好像許久沒有更新，看他網頁介紹說新版快要出了，也不知道多快XD。這次Python練習主題應該是要熟悉一下Object-Oriented怎樣在Python上面使用。雖然參考的書是Python3不過應該沒差吧！其實還有像是怎樣建立或是打包package(模組)感覺也很重要。這次打算延續上次寫的GUI，然後加入怎樣寫OO的程式。
主程式長成這樣，就弄個文字介面的就好。拿書本上的練習來打打字也沒有什麼特別，不過想要用其他寫好的模組，似乎只要import之後就可以用了。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ConsoleMain.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="s">Created on 2013/2/3&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;p&gt;@author: CYChiang</span>
</span><span class='line'><span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">Shape</span>
</span><span class='line'><span class="k">if</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">name</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span> <span class="o">==</span> <span class="s">&#39;&lt;strong&gt;main&lt;/strong&gt;&#39;</span><span class="p">:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">a</span> <span class="o">=</span> <span class="n">Shape</span><span class="o">.</span><span class="n">Point</span><span class="p">()</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="n">Shape</span><span class="o">.</span><span class="n">Point</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;a = Shape.Point&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;repr(a) = &quot;</span><span class="p">,</span> <span class="nb">repr</span><span class="p">(</span><span class="n">a</span><span class="p">))</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;b = Shape.Point(3, 4)&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;repr(b) = &quot;</span><span class="p">,</span> <span class="nb">repr</span><span class="p">(</span><span class="n">b</span><span class="p">))</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;str(b) = &quot;</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">b</span><span class="p">))</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;b.distance_from_origin = &quot;</span><span class="p">,</span> <span class="n">b</span><span class="o">.</span><span class="n">distance_from_origin</span><span class="p">())</span>
</span><span class='line'><span class="n">b</span><span class="o">.</span><span class="n">x</span> <span class="o">=</span> <span class="o">-</span><span class="mi">19</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;b=-19, str(b) = &quot;</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">b</span><span class="p">))</span>
</span><span class='line'><span class="k">if</span> <span class="n">a</span> <span class="o">==</span> <span class="n">b</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;Point a equal b&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="n">a</span> <span class="o">!=</span> <span class="n">b</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;Point a not equal to b&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在class程式當中有很多<strong>OO</strong>的東西，看了一下書，好像是屬於Object類別裡面預設的東西。我嘗試把<strong>str</strong>拿掉，出來的結果還是跟有加入<strong>str</strong>寫的東西一樣，所以我覺得這應該是內建的method來協助class之間的運算，除了這裡面寫的這些，google一下好像也有很多<strong>OO</strong>的方法在Object裡面。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Shape.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="s">Created on 2013/2/3&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;p&gt;@author: CYChiang</span>
</span><span class='line'><span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">math</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">Point</span><span class="p">:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">x</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">y</span>
</span><span class='line'><span class="k">def</span> <span class="nf">distance_from_origin</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">math</span><span class="o">.</span><span class="n">hypot</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">x</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__eq__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="n">x</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="n">y</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Point({0.x!r}, {0.y!r})&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;({0.x!r}, {0.y!r})&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>感覺好像也沒有什麼特別的，以上是class基本的實作，接下來弄個繼承。在繼承上練習的時候，書本程式碼竟然不會過…Google一下好像是什麼oldstyle的問題，暫時不太想理會，總之找到了另外一個繼承的方式。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Shape.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">Circle</span><span class="p">(</span><span class="n">Point</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">radius</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">radius</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>    <span class="c">#super().__init__(x, y)</span>
</span><span class='line'>    <span class="c">#super(Circle, self).__init__(x, y)</span>
</span><span class='line'>    <span class="n">Point</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">radius</span> <span class="o">=</span> <span class="n">radius</span>
</span><span class='line'><span class="k">def</span> <span class="nf">edge_distance_from_origin</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">abs</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">distance_from_origin</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">radius</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">area</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span> <span class="o">*</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">radius</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">circumference</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span> <span class="o">*</span> <span class="bp">self</span><span class="o">.</span><span class="n">radius</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__eq__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">radius</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="n">radius</span> <span class="ow">and</span> <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="n">__eq__</span><span class="p">(</span><span class="n">other</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Circle({0.radius!r}, {0.x!r}, {0.y!r})&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">repr</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>有問題的點就是在<code>super().__init__(x, y)</code>和<code>super(Circle, self).__init__(x, y)</code>依照說明在class建立的時候會去呼叫<strong>init</strong>的內容，算建構式吧！那在super那裡應該是繼承Point裡面的建構<code>x, y</code>這兩個值才對。但是怎樣用在<code>super().__init__(x, y)</code>和<code>super(Circle, self).__init__(x, y)</code>一定噴錯給你。最後發現要用<code>Point.__init__(self, x, y)</code>這應該是先呼叫Point的建構，總之，可行，以後再來慢慢想怎樣解決這問題。接下來的Code是加入數字檢查是不是為正和不為0，備忘一下。<code>assert “條件”, "不成立輸出"</code>。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Shape.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="s">Created on 2013/2/3&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;p&gt;@author: CYChiang</span>
</span><span class='line'><span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">math</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">Point</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">x</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">y</span>
</span><span class='line'><span class="k">def</span> <span class="nf">distance_from_origin</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">math</span><span class="o">.</span><span class="n">hypot</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">x</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__eq__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="n">x</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="n">y</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Point({0.x!r}, {0.y!r})&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;({0.x!r}, {0.y!r})&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'><span class="nd">@property</span>
</span><span class='line'><span class="k">def</span> <span class="nf">x</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__x</span>
</span><span class='line'><span class="nd">@property</span>
</span><span class='line'><span class="k">def</span> <span class="nf">y</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__y</span>
</span><span class='line'><span class="nd">@x.setter</span>
</span><span class='line'><span class="k">def</span> <span class="nf">x</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
</span><span class='line'>    <span class="k">assert</span> <span class="n">x</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&quot;must be nonzero and non-negative&quot;</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">__x</span> <span class="o">=</span> <span class="n">x</span>
</span><span class='line'><span class="nd">@y.setter</span>
</span><span class='line'><span class="k">def</span> <span class="nf">y</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
</span><span class='line'>    <span class="k">assert</span> <span class="n">y</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&quot;must be nonzero and non-negative&quot;</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">__y</span><span class="o">=</span><span class="n">y</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">Circle</span><span class="p">(</span><span class="n">Point</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">radius</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">radius</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>    <span class="c">#super().__init__(x, y)</span>
</span><span class='line'>    <span class="c">#super(Circle, self).__init__(x, y)</span>
</span><span class='line'>    <span class="n">Point</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">radius</span> <span class="o">=</span> <span class="n">radius</span>
</span><span class='line'><span class="nd">@property</span>
</span><span class='line'><span class="k">def</span> <span class="nf">edge_distance_from_origin</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">abs</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">distance_from_origin</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">radius</span><span class="p">)</span>
</span><span class='line'><span class="nd">@property</span>
</span><span class='line'><span class="k">def</span> <span class="nf">area</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span> <span class="o">*</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">radius</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">circumference</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span> <span class="o">*</span> <span class="bp">self</span><span class="o">.</span><span class="n">radius</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__eq__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">radius</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="n">radius</span> <span class="ow">and</span> <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="n">__eq__</span><span class="p">(</span><span class="n">other</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Circle({0.radius!r}, {0.x!r}, {0.y!r})&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">repr</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'><span class="nd">@property</span>
</span><span class='line'><span class="k">def</span> <span class="nf">radius</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__radius</span>
</span><span class='line'><span class="nd">@radius.setter</span>
</span><span class='line'><span class="k">def</span> <span class="nf">radius</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">radius</span><span class="p">):</span>
</span><span class='line'>    <span class="k">assert</span> <span class="n">radius</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&quot;must be nonzero and non-negative&quot;</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">__radius</span> <span class="o">=</span> <span class="n">radius</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>突然覺得如果加入一些有的沒得檢查，長度會變的有點長…不過也還好。以後再來想要怎樣精簡或是有沒有其他檢查的方式。之後想要來練習寫一下檔案處理之類的還有研究一下別人的code，看能不能寫出什麼比較有趣的東西。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python: GUI Programming-I]]></title>
    <link href="http://cychiang.github.com/blog/2013/02/02/python-gui-programming-i/"/>
    <updated>2013-02-02T20:28:00+08:00</updated>
    <id>http://cychiang.github.com/blog/2013/02/02/python-gui-programming-i</id>
    <content type="html"><![CDATA[<p>老是有很多想法，無奈時間不是很充足，後來想想，時間就像OO，所以我決定堅持到底，看能不能每天都寫點東西，除了持續一下這個Blog也持續寫Code練習練習，避免練習不足。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>PyQtGuiMain.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;</span><span class="c">#&lt;/h2&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Created</span> <span class="n">on</span> <span class="mi">2013</span><span class="o">/</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="nd">@author</span><span class="p">:</span> <span class="n">CYChiang</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;</span><span class="c">#&lt;/h2&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">PyQt4</span> <span class="kn">import</span> <span class="n">QtGui</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">PyGui</span><span class="p">(</span><span class="n">QtGui</span><span class="o">.</span><span class="n">QWidget</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class='line'>    <span class="nb">super</span><span class="p">(</span><span class="n">PyGui</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="n">parent</span><span class="p">)</span>
</span><span class='line'>    <span class="c"># set component</span>
</span><span class='line'>    <span class="n">Label</span> <span class="o">=</span> <span class="n">QtGui</span><span class="o">.</span><span class="n">QLabel</span><span class="p">(</span><span class="s">&quot;The Label&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">button</span> <span class="o">=</span> <span class="n">QtGui</span><span class="o">.</span><span class="n">QPushButton</span><span class="p">(</span><span class="s">&quot;Click Me&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">lineEdit</span> <span class="o">=</span> <span class="n">QtGui</span><span class="o">.</span><span class="n">QLineEdit</span><span class="p">()</span>
</span><span class='line'>    <span class="c"># configure the layout</span>
</span><span class='line'>    <span class="n">mainLayout</span> <span class="o">=</span> <span class="n">QtGui</span><span class="o">.</span><span class="n">QGridLayout</span><span class="p">()</span>
</span><span class='line'>    <span class="n">mainLayout</span><span class="o">.</span><span class="n">addWidget</span><span class="p">(</span><span class="n">Label</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mainLayout</span><span class="o">.</span><span class="n">addWidget</span><span class="p">(</span><span class="n">lineEdit</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mainLayout</span><span class="o">.</span><span class="n">addWidget</span><span class="p">(</span><span class="n">button</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="c"># add event listener and handle</span>
</span><span class='line'>    <span class="n">button</span><span class="o">.</span><span class="n">clicked</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">close</span><span class="p">)</span>
</span><span class='line'>    <span class="c"># set layout</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">setLayout</span><span class="p">(</span><span class="n">mainLayout</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="k">if</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">name</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span> <span class="o">==</span> <span class="s">&#39;&lt;strong&gt;main&lt;/strong&gt;&#39;</span><span class="p">:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">app</span> <span class="o">=</span> <span class="n">QtGui</span><span class="o">.</span><span class="n">QApplication</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="n">MainGui</span> <span class="o">=</span> <span class="n">PyGui</span><span class="p">()</span>
</span><span class='line'><span class="c"># setGeometry(x_pos, y_pos, width, height)</span>
</span><span class='line'><span class="n">MainGui</span><span class="o">.</span><span class="n">setGeometry</span><span class="p">(</span><span class="mi">400</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">800</span><span class="p">,</span> <span class="mi">600</span><span class="p">)</span>
</span><span class='line'><span class="c"># resize(width, height)</span>
</span><span class='line'><span class="c"># MainGui.resize(400, 300)</span>
</span><span class='line'><span class="c"># Set the title of program</span>
</span><span class='line'><span class="n">MainGui</span><span class="o">.</span><span class="n">setWindowTitle</span><span class="p">(</span><span class="s">&#39;The PyQt GUI&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># Set Icon</span>
</span><span class='line'><span class="c"># MainGui.setWindowIcon(QtGui.QIcon(&#39;lucia_2d.png&#39;))</span>
</span><span class='line'><span class="n">MainGui</span><span class="o">.</span><span class="n">setToolTip</span><span class="p">(</span><span class="s">&#39;I am message.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># Set style</span>
</span><span class='line'><span class="n">MainGui</span><span class="o">.</span><span class="n">setStyleSheet</span><span class="p">(</span><span class="s">&#39;background: white&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># Display </span>
</span><span class='line'><span class="n">MainGui</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span><span class='line'><span class="c"># run and exit</span>
</span><span class='line'><span class="n">app</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="n">app</span><span class="o">.</span><span class="n">exec_</span><span class="p">())</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>程式執行起來大概長成這樣。整個來說Python在用Qt寫GUI上就跟C/C++寫Qt差不多，很多方法都一樣的使用方式，那在這邊主要先練習一下QWidget有哪些功能以及要怎樣使用Qt的connect，這部分就和之前C/C++用法不太一樣，不知道是不是因為新版本的關係。</p>

<p><img src=https://dl.dropbox.com/u/15251095/PyQtGui/ThePyQtGui.png width=640 height=480 /></p>

<p>附上一點解說，同樣主要針對QWidget。後來發現除非對某些視窗需要特別的方法，不然似乎使用framework提供的方法就很夠用了。之後會慢慢的寫些東西補齊全，至於最後出現哪些東西，我也不知道。</p>

<p><code>
MainGui.setGeometry(x, y, w, h)                  # 設定程式出現在螢幕的x, y地方以及程式的大小
MainGui.setWindowTitle("String"")                   # 這部分是指定我的視窗名稱要什麼
MainGui.setToolTip("String")                        # 這部分是當滑鼠放在程式當中空白部分，會出現哪些字
MainGui.setWindowIcon(QtGui.QIcon("path"”))         # 裡面可以指定Icon的小圖案
MainGui.setStyleSheet('background: white')      # 指定背景顏色，似乎可以套用個圖片之類的
</code>
至於其他的object有提供哪些方法？我想大部份和QWidget提供的差不多，我想。但是在排版上，可以透過一些layout來輔助，如果指定一些特別的位置在程式當中。希望每天可以持續下去！這樣的寫程式方式，當然另外一方面Python用的不是很熟，想要寫些額外的東西有點卡卡，就先熟悉然後繼續練習和強化自己。</p>
]]></content>
  </entry>
  
</feed>
