<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | The memo blog.]]></title>
  <link href="http://cychiang.github.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://cychiang.github.com/"/>
  <updated>2013-02-18T11:28:19+08:00</updated>
  <id>http://cychiang.github.com/</id>
  <author>
    <name><![CDATA[Casper Chiang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vuforia-II: Camera(III)]]></title>
    <link href="http://cychiang.github.com/blog/2013/02/06/vuforia-ii-camera-iii/"/>
    <updated>2013-02-06T19:39:00+08:00</updated>
    <id>http://cychiang.github.com/blog/2013/02/06/vuforia-ii-camera-iii</id>
    <content type="html"><![CDATA[<p>在經過前面一篇<a href="http://cychiang.github.com/blog/2013/02/05/vuforia-ii-camera-ii/">Vuforia-II: Camera(II)</a>我們<code>trace</code>到了<code>InitQCARTask()</code>接下來就是<code>updateApplicationStatus(APPSTATUS_INIT_APP_AR);</code>在<code>case APPSTATUS_INIT_APP_AR:</code>當中，主要就這段<code>initApplicationAR();</code>那我們來看一下這段<code>function</code>裡面的內容。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/** Initializes AR application components. */</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">initApplicationAR</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// Do application initialization in native code (e.g. registering</span>
</span><span class='line'>    <span class="c1">// callbacks, etc.):</span>
</span><span class='line'>    <span class="n">initApplicationNative</span><span class="o">(</span><span class="n">mScreenWidth</span><span class="o">,</span> <span class="n">mScreenHeight</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create OpenGL ES view:</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">depthSize</span> <span class="o">=</span> <span class="mi">16</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">stencilSize</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">translucent</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">.</span><span class="na">requiresAlpha</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mGlView</span> <span class="o">=</span> <span class="k">new</span> <span class="n">QCARSampleGLView</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>    <span class="n">mGlView</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">mQCARFlags</span><span class="o">,</span> <span class="n">translucent</span><span class="o">,</span> <span class="n">depthSize</span><span class="o">,</span> <span class="n">stencilSize</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mRenderer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">cameraDemoRenderer</span><span class="o">();</span>
</span><span class='line'>    <span class="n">mRenderer</span><span class="o">.</span><span class="na">mActivity</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
</span><span class='line'>    <span class="n">mGlView</span><span class="o">.</span><span class="na">setRenderer</span><span class="o">(</span><span class="n">mRenderer</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">LayoutInflater</span> <span class="n">inflater</span> <span class="o">=</span> <span class="n">LayoutInflater</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>    <span class="n">mUILayout</span> <span class="o">=</span> <span class="o">(</span><span class="n">RelativeLayout</span><span class="o">)</span> <span class="n">inflater</span><span class="o">.</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">,</span>
</span><span class='line'>            <span class="kc">null</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mUILayout</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">View</span><span class="o">.</span><span class="na">VISIBLE</span><span class="o">);</span>
</span><span class='line'>    <span class="n">mUILayout</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Gets a reference to the loading dialog</span>
</span><span class='line'>    <span class="n">mLoadingDialogContainer</span> <span class="o">=</span> <span class="n">mUILayout</span>
</span><span class='line'>            <span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">loading_indicator</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Shows the loading indicator at start</span>
</span><span class='line'>    <span class="n">loadingDialogHandler</span><span class="o">.</span><span class="na">sendEmptyMessage</span><span class="o">(</span><span class="n">SHOW_LOADING_DIALOG</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Adds the inflated layout to the view</span>
</span><span class='line'>    <span class="n">addContentView</span><span class="o">(</span><span class="n">mUILayout</span><span class="o">,</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">,</span>
</span><span class='line'>            <span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>看來我們又遇到了<code>native code</code>就是<code>initApplicationNative(mScreenWidth, mScreenHeight);</code>在這段<code>native code</code>當中我們可以知道它需要的參數為<code>mScreenWidth, mScreenHeight</code>，這初始化內容從前面一篇提到的<code>initApplication()</code>階段已經取得了當前的<code>Screen</code>的<code>Width</code>以及<code>Height</code>所以除非出錯，否則應該是非<code>0</code>然而在這段<code>native code</code>當中似乎進行了不少事情。我想整個最讓我覺得厲害的應該就是<code>jclass activityClass = env-&gt;GetObjectClass(obj);</code>這部分是個<code>Android jni</code>當中，<code>jni</code>與<code>java class</code>溝通的一個方式，但是主要也是用來<code>initialization texture</code>所用，首先在<code>java clas</code>當中，有一個<code>code</code>是關於<code>texture</code>的，主要是讀取。那在這邊要解釋起來似乎利用圖說明會比較好，之後可以開個這種教學文，圖文並茂。簡單說就是首先在<code>java</code>端<code>initialization</code>的時候，會有一段是<code>private void loadTextures()</code>，在<code>onCreate()</code>的階段出現的。這邊會去讀取<code>apk</code>底下的<code>texture</code>資料。接著還有另外一個<code>function</code>是用來取得總共讀取的幾個<code>texture</code>就是<code>public int getTextureCount()</code>這邊的意思就是，在jni底下，先去尋找呼叫這段<code>jni</code>的<code>class</code>然後尋找這個<code>class</code>有沒有<code>method</code>是<code>getTextureCount</code>，第三個參數<code>()I</code>這個部份可以<a href="http://chnic.iteye.com/blog/228096">參考這邊</a>這個<code>Blog</code>有針對這些參數進行說明。那我們可以知道它主要就是來去取得這個<code>class</code>的<code>method</code>那這個<code>class</code>的作用就是取得總共有幾個<code>texture</code>接著繼續呼叫用來<code>init</code>進行繪圖所需要的<code>texture</code>這部分等以後對<code>OpenGL</code>比較熟悉的時候再來慢慢研究好了。總之我們知道這段是用來<code>init</code>繪圖用的<code>texture</code>。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.cpp  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span>
</span><span class='line'><span class="n">Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_initApplicationNative</span><span class="p">(</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                        <span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">obj</span><span class="p">,</span> <span class="n">jint</span> <span class="n">width</span><span class="p">,</span> <span class="n">jint</span> <span class="n">height</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_initApplicationNative&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Store screen dimensions</span>
</span><span class='line'><span class="n">screenWidth</span> <span class="o">=</span> <span class="n">width</span><span class="p">;</span>
</span><span class='line'><span class="n">screenHeight</span> <span class="o">=</span> <span class="n">height</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Handle to the activity class:</span>
</span><span class='line'><span class="n">jclass</span> <span class="n">activityClass</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetObjectClass</span><span class="p">(</span><span class="n">obj</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">jmethodID</span> <span class="n">getTextureCountMethodID</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetMethodID</span><span class="p">(</span><span class="n">activityClass</span><span class="p">,</span>
</span><span class='line'>                                                <span class="s">&quot;getTextureCount&quot;</span><span class="p">,</span> <span class="s">&quot;()I&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">getTextureCountMethodID</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Function getTextureCount() not found.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">textureCount</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CallIntMethod</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">getTextureCountMethodID</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">textureCount</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;getTextureCount() returned zero.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">textures</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Texture</span><span class="o">*</span><span class="p">[</span><span class="n">textureCount</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">jmethodID</span> <span class="n">getTextureMethodID</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetMethodID</span><span class="p">(</span><span class="n">activityClass</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;getTexture&quot;</span><span class="p">,</span> <span class="s">&quot;(I)Lcom/qualcomm/QCARSamples/ImageTargets/Texture;&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">getTextureMethodID</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Function getTexture() not found.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Register the textures</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">textureCount</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">jobject</span> <span class="n">textureObject</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CallObjectMethod</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">getTextureMethodID</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">textureObject</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;GetTexture() returned zero pointer&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">textures</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">Texture</span><span class="o">::</span><span class="n">create</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">textureObject</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_initApplicationNative finished&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在<code>init</code>完<code>texture</code>之後底下的工作大部份就是在初始化一些視窗元件等等，還有把<code>View</code>加入到<code>addContentView()</code>當中，我想應該可以先跳過了。接著進入<code>updateApplicationStatus(APPSTATUS_LOAD_TRACKER);</code>，在<code>case APPSTATUS_LOAD_TRACKER:</code>當中，主要就是進行<code>mLoadTrackerTask = new LoadTrackerTask(); mLoadTrackerTask.execute();</code>另外開個<code>Task</code>來讀取<code>Tracker</code>，在這邊主要的程式碼為：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/** An async task to load the tracker data asynchronously. */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">class</span> <span class="nc">LoadTrackerTask</span> <span class="kd">extends</span> <span class="n">AsyncTask</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Integer</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="n">Boolean</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Prevent the onDestroy() method to overlap:</span>
</span><span class='line'>        <span class="kd">synchronized</span> <span class="o">(</span><span class="n">mShutdownLock</span><span class="o">)</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Load the tracker data set:</span>
</span><span class='line'>            <span class="k">return</span> <span class="o">(</span><span class="n">loadTrackerData</span><span class="o">()</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">Boolean</span> <span class="n">result</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGD</span><span class="o">(</span><span class="s">&quot;LoadTrackerTask::onPostExecute: execution &quot;</span> <span class="o">+</span>
</span><span class='line'>                    <span class="o">(</span><span class="n">result</span> <span class="o">?</span> <span class="s">&quot;successful&quot;</span> <span class="o">:</span> <span class="s">&quot;failed&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">result</span><span class="o">)</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="c1">// The stones and chips data set is now active:</span>
</span><span class='line'>            <span class="n">mIsStonesAndChipsDataSetActive</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Done loading the tracker, update application status:</span>
</span><span class='line'>            <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_INITED</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Create dialog box for display error:</span>
</span><span class='line'>            <span class="n">AlertDialog</span> <span class="n">dialogError</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AlertDialog</span><span class="o">.</span><span class="na">Builder</span>
</span><span class='line'>            <span class="o">(</span>
</span><span class='line'>                <span class="n">ImageTargets</span><span class="o">.</span><span class="na">this</span>
</span><span class='line'>            <span class="o">).</span><span class="na">create</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">dialogError</span><span class="o">.</span><span class="na">setButton</span>
</span><span class='line'>            <span class="o">(</span>
</span><span class='line'>                <span class="n">DialogInterface</span><span class="o">.</span><span class="na">BUTTON_POSITIVE</span><span class="o">,</span>
</span><span class='line'>                <span class="s">&quot;Close&quot;</span><span class="o">,</span>
</span><span class='line'>                <span class="k">new</span> <span class="n">DialogInterface</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span>
</span><span class='line'>                <span class="o">{</span>
</span><span class='line'>                    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">DialogInterface</span> <span class="n">dialog</span><span class="o">,</span> <span class="kt">int</span> <span class="n">which</span><span class="o">)</span>
</span><span class='line'>                    <span class="o">{</span>
</span><span class='line'>                        <span class="c1">// Exiting application:</span>
</span><span class='line'>                        <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Show dialog box with error message:</span>
</span><span class='line'>            <span class="n">dialogError</span><span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="s">&quot;Failed to load tracker data.&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">dialogError</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在主要的<code>protected Boolean doInBackground(Void... params)</code>當中只有進行一件事情，就是<code>return (loadTrackerData() &gt; 0);</code>，這邊又是另外一個<code>native code</code>，接著就一樣跳進去這邊來看看吧。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.cpp  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">JNIEXPORT</span> <span class="kt">int</span> <span class="n">JNICALL</span>
</span><span class='line'><span class="n">Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_loadTrackerData</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jobject</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_loadTrackerData&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Get the image tracker:</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">TrackerManager</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">trackerManager</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">::</span><span class="n">TrackerManager</span><span class="o">::</span><span class="n">getInstance</span><span class="p">();</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">ImageTracker</span><span class="o">*</span> <span class="n">imageTracker</span> <span class="o">=</span> <span class="k">static_cast</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">QCAR</span><span class="o">::</span><span class="n">ImageTracker</span><span class="o">*&amp;</span><span class="n">gt</span><span class="p">;(</span>
</span><span class='line'>                <span class="n">trackerManager</span><span class="p">.</span><span class="n">getTracker</span><span class="p">(</span><span class="n">QCAR</span><span class="o">::</span><span class="n">Tracker</span><span class="o">::</span><span class="n">IMAGE_TRACKER</span><span class="p">));</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">imageTracker</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Failed to load tracking data set because the ImageTracker has not&quot;</span>
</span><span class='line'>        <span class="s">&quot; been initialized.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Create the data sets:</span>
</span><span class='line'><span class="n">dataSetStonesAndChips</span> <span class="o">=</span> <span class="n">imageTracker</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">createDataSet</span><span class="p">();</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">dataSetStonesAndChips</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Failed to create a new tracking data.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">dataSetTarmac</span> <span class="o">=</span> <span class="n">imageTracker</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">createDataSet</span><span class="p">();</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">dataSetTarmac</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Failed to create a new tracking data.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Load the data sets:</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">dataSetStonesAndChips</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">load</span><span class="p">(</span><span class="s">&quot;StonesAndChips.xml&quot;</span><span class="p">,</span> <span class="n">QCAR</span><span class="o">::</span><span class="n">DataSet</span><span class="o">::</span><span class="n">STORAGE_APPRESOURCE</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Failed to load data set.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">dataSetTarmac</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">load</span><span class="p">(</span><span class="s">&quot;Tarmac.xml&quot;</span><span class="p">,</span> <span class="n">QCAR</span><span class="o">::</span><span class="n">DataSet</span><span class="o">::</span><span class="n">STORAGE_APPRESOURCE</span><span class="p">))</span>
</span><span class='line'><span class="c1">//if (!dataSetTarmac-&amp;gt;load(&quot;FunnyDB.xml&quot;, QCAR::DataSet::STORAGE_APPRESOURCE))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Failed to load data set.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Activate the data set:</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">imageTracker</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">activateDataSet</span><span class="p">(</span><span class="n">dataSetStonesAndChips</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Failed to activate data set.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Successfully loaded and activated data set.&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>似乎在進行<code>TrackerManager</code>操作的時候，都要先<code>getInstance()</code>似乎要先記住了。在這邊主要就是讀取外部的<code>DataSet</code>這些宣告在一開始的時候就有出現。似乎好像也沒有什麼特別的，如果要詳細說明應該只要查查API應該都有，這是<a href="https://developer.vuforia.com/resources/api/class_q_c_a_r_1_1_data_set">DataSet</a>API說明。我想這邊應該是可以重複利用才對。</p>

<p><code>
QCAR::DataSet* dataSetStonesAndChips    = 0;
QCAR::DataSet* dataSetTarmac            = 0;
</code>
在看完這邊之後，接下來就是進入<code>updateApplicationStatus(APPSTATUS_INITED);</code>在<code>case APPSTATUS_INITED:</code>當中，似乎是準備開始進入跑跑階段了。在這個階段當中，主要進行的<code>onQCARInitializedNative();</code>剩下的就是<code>System.gc()</code>和加入<code>GLView</code>到<code>addContentView()</code>當中，接下來我們看一下<code>onQCARInitializedNative()</code>裡面是在執行哪些事情。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.cpp  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span>
</span><span class='line'><span class="n">Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_onQCARInitializedNative</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jobject</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// Register the update callback where we handle the data set swap:</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">registerCallback</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">updateCallback</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Comment in to enable tracking of up to 2 targets simultaneously and</span>
</span><span class='line'><span class="c1">// split the work over multiple frames:</span>
</span><span class='line'><span class="c1">// QCAR::setHint(QCAR::HINT_MAX_SIMULTANEOUS_IMAGE_TARGETS, 2);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>結果這邊只是<code>QCAR::registerCallback(&amp;updateCallback);</code>查查一下<a href="https://developer.vuforia.com/resources/api/namespace_q_c_a_r#a7a3bd235ed40dcb33006ee40523d9501">API</a>，說明寫著<code>void QCAR_API QCAR::registerCallback( UpdateCallback *object )</code>以及 <code>Registers an object to be called when new tracking data is available.</code>然而這邊的<code>updateCallback</code>是一個<code>class</code>...</p>

<p><code>
ImageTargets_UpdateCallback updateCallback;
</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.cpp  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// Object to receive update callbacks from QCAR SDK</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ImageTargets_UpdateCallback</span> <span class="o">:</span> <span class="k">public</span> <span class="n">QCAR</span><span class="o">::</span><span class="n">UpdateCallback</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">virtual</span> <span class="kt">void</span> <span class="n">QCAR_onUpdate</span><span class="p">(</span><span class="n">QCAR</span><span class="o">::</span><span class="n">State</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="cm">/*state*/</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">switchDataSetAsap</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">switchDataSetAsap</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Get the image tracker:</span>
</span><span class='line'>        <span class="n">QCAR</span><span class="o">::</span><span class="n">TrackerManager</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">trackerManager</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">::</span><span class="n">TrackerManager</span><span class="o">::</span><span class="n">getInstance</span><span class="p">();</span>
</span><span class='line'>        <span class="n">QCAR</span><span class="o">::</span><span class="n">ImageTracker</span><span class="o">*</span> <span class="n">imageTracker</span> <span class="o">=</span> <span class="k">static_cast</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">QCAR</span><span class="o">::</span><span class="n">ImageTracker</span><span class="o">*&amp;</span><span class="n">gt</span><span class="p">;(</span>
</span><span class='line'>            <span class="n">trackerManager</span><span class="p">.</span><span class="n">getTracker</span><span class="p">(</span><span class="n">QCAR</span><span class="o">::</span><span class="n">Tracker</span><span class="o">::</span><span class="n">IMAGE_TRACKER</span><span class="p">));</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">imageTracker</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">dataSetStonesAndChips</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">dataSetTarmac</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span>
</span><span class='line'>            <span class="n">imageTracker</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">getActiveDataSet</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Failed to switch data set.&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">imageTracker</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">getActiveDataSet</span><span class="p">()</span> <span class="o">==</span> <span class="n">dataSetStonesAndChips</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">imageTracker</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">deactivateDataSet</span><span class="p">(</span><span class="n">dataSetStonesAndChips</span><span class="p">);</span>
</span><span class='line'>            <span class="n">imageTracker</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">activateDataSet</span><span class="p">(</span><span class="n">dataSetTarmac</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">imageTracker</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">deactivateDataSet</span><span class="p">(</span><span class="n">dataSetTarmac</span><span class="p">);</span>
</span><span class='line'>            <span class="n">imageTracker</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">activateDataSet</span><span class="p">(</span><span class="n">dataSetStonesAndChips</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">};</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>看了一下，原來是用來切換<code>DataSet</code>用的，在主要的<code>class</code>當中會有一段是呼叫<code>menu</code>然後選擇另外一個<code>DataSet</code>所使用的也是<code>native code</code>就只有呼叫：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.cpp  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span>
</span><span class='line'><span class="n">Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_switchDatasetAsap</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jobject</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">switchDataSetAsap</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>所以註冊這個<code>callback</code>應該只是用來監控<code>DataSet</code>的變化。寫到這邊，突然覺得越寫越沒力氣。。。全部跑完之後好像是最後一個階段了<code>updateApplicationStatus(APPSTATUS_CAMERA_RUNNING);</code>之後的階段似乎都是在處理停止和結束的事情。在<code>case APPSTATUS_CAMERA_RUNNING:</code>當中，似乎只有進行<code>startCamera();</code>呼叫<code>native code</code>，接著就來看看這裡面到底執行哪些事情。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.cpp  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span>
</span><span class='line'><span class="n">Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_startCamera</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                                                                     <span class="n">jobject</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_startCamera&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Select the camera to open, set this to QCAR::CameraDevice::CAMERA_FRONT </span>
</span><span class='line'><span class="c1">// to activate the front camera instead.</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">CameraDevice</span><span class="o">::</span><span class="n">CAMERA</span> <span class="n">camera</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">::</span><span class="n">CameraDevice</span><span class="o">::</span><span class="n">CAMERA_DEFAULT</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Initialize the camera:</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">QCAR</span><span class="o">::</span><span class="n">CameraDevice</span><span class="o">::</span><span class="n">getInstance</span><span class="p">().</span><span class="n">init</span><span class="p">(</span><span class="n">camera</span><span class="p">))</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Configure the video background</span>
</span><span class='line'><span class="n">configureVideoBackground</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Select the default mode:</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">QCAR</span><span class="o">::</span><span class="n">CameraDevice</span><span class="o">::</span><span class="n">getInstance</span><span class="p">().</span><span class="n">selectVideoMode</span><span class="p">(</span>
</span><span class='line'>                            <span class="n">QCAR</span><span class="o">::</span><span class="n">CameraDevice</span><span class="o">::</span><span class="n">MODE_DEFAULT</span><span class="p">))</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Start the camera:</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">QCAR</span><span class="o">::</span><span class="n">CameraDevice</span><span class="o">::</span><span class="n">getInstance</span><span class="p">().</span><span class="n">start</span><span class="p">())</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Uncomment to enable flash</span>
</span><span class='line'><span class="c1">//if(QCAR::CameraDevice::getInstance().setFlashTorchMode(true))</span>
</span><span class='line'><span class="c1">//  LOG(&quot;IMAGE TARGETS : enabled torch&quot;);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Uncomment to enable infinity focus mode, or any other supported focus mode</span>
</span><span class='line'><span class="c1">// See CameraDevice.h for supported focus modes</span>
</span><span class='line'><span class="c1">//if(QCAR::CameraDevice::getInstance().setFocusMode(QCAR::CameraDevice::FOCUS_MODE_INFINITY))</span>
</span><span class='line'><span class="c1">//  LOG(&quot;IMAGE TARGETS : enabled infinity focus&quot;);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Start the tracker:</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">TrackerManager</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">trackerManager</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">::</span><span class="n">TrackerManager</span><span class="o">::</span><span class="n">getInstance</span><span class="p">();</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">Tracker</span><span class="o">*</span> <span class="n">imageTracker</span> <span class="o">=</span> <span class="n">trackerManager</span><span class="p">.</span><span class="n">getTracker</span><span class="p">(</span><span class="n">QCAR</span><span class="o">::</span><span class="n">Tracker</span><span class="o">::</span><span class="n">IMAGE_TRACKER</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="n">imageTracker</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">imageTracker</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">start</span><span class="p">();</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>首先，先來查一下<code>QCAR</code>的<a href="https://developer.vuforia.com/resources/api/class_q_c_a_r_1_1_camera_device#a935655cbd07fd33264578955854706fb">Camera API</a>，可以知道<code>enum QCAR::CameraDevice::CAMERA</code>型態為<code>enum</code>總共有三個參數：
<code>
Enumerator:
CAMERA_DEFAULT: Default camera device. Usually BACK.
CAMERA_BACK   : Rear facing camera.
CAMERA_FRONT  : Front facing camera.
</code>
好像也沒有什麼特別的，就是指定說我要後置鏡頭這樣。<code>DEFAULT</code>通常都是後置。接著就是取得<code>Instance</code>然後<code>init()</code>接下來又是呼叫另外一個<code>native code</code>老實說，感覺就像是在設定螢幕寬高的樣子，只是可能還有帶著<code>3D</code>物件所需要的參數？先看一下<code>QCAR::VideoBackgroundConfig config;</code>的<a href="https://developer.vuforia.com/resources/api/struct_q_c_a_r_1_1_video_background_config">API</a>好了。裡面主要有5個<code>Public Attributes</code>，分別為：
<code>
bool QCAR::VideoBackgroundConfig::mEnabled
bool QCAR::VideoBackgroundConfig::mSynchronous
Vec2I QCAR::VideoBackgroundConfig::mPosition
Vec2I QCAR::VideoBackgroundConfig::mSize
VIDEO_BACKGROUND_REFLECTION QCAR::VideoBackgroundConfig::mReflection
</code>
在這裡面也有說明可以參考，那在這段code主要的設定好像只有前面4個，在<code>mEnabled</code>的說明為：<code>Enables/disables rendering of the video background.</code>看樣子是設定要不要<code>Rendering</code>物件？接著就是<code>mSynchronous</code>，說明為<code>Enables/disables synchronization of render and camera frame rate.</code>又有一些補充說明<code>If synchronization is enabled the SDK will attempt to match the rendering frame rate with the camera frame rate. This may result in a performance gain as potentially redundant render calls are avoided. Enabling this is not recommended if your augmented content needs to be animated at a rate higher than the rate at which the camera delivers frames.</code>看樣子應該是<code>rander</code>的物件是不是要和<code>frame rate</code>同步。上面寫說，如果你的物件是個超級<code>animated</code>很會動，可能會很吃資源，建議不要同步。假設你的動畫需要<code>100 fps</code>你去和<code>30 fps</code>的同步應該會爆炸。在這邊因為用的是靜態茶壺，應該不會怎樣才對，除非茶壺需要自體轉動，不過好像也沒差？接著就是<code>mPosition</code>，說明為<code>Relative position of the video background in the render target in pixels. Describes the offset of the center of video background to the center of the screen (viewport) in pixels. A value of (0,0) centers the video background, whereas a value of (-10,15) moves the video background 10 pixels to the left and 15 pixels upwards.</code>看樣子應該就是<code>offset</code>就是通常來說，物件都會<code>Render</code>在<code>Target</code>的中央，那這個<code>offset</code>就是可以偏移一下這樣。那在這邊是不要偏移，所以就都用<code>0.0f</code>了，<code>f</code>沒意外應該是代表<code>float</code> 接著好像就是設定<code>mSize</code>說明為<code>Width and height of the video background in pixels.</code>似乎就是<code>background</code>的寬高，然後是要<code>pixels</code>，底下說明了<code>Using the device's screen size for this parameter scales the image to fullscreen. Notice that if the camera's aspect ratio is different than the screen's aspect ratio this will create a non-uniform stretched image.</code>看樣子應該是要把<code>camera</code>的<code>size</code>能夠和<code>screen size</code>有著相同的比例？應該是，否則就不會去取得<code>VideoMode</code>了，這是<a href="https://developer.vuforia.com/resources/api/struct_q_c_a_r_1_1_video_mode">VideoMode</a>的API，果然就是取得<code>Camera</code>的，但是它只有三種<code>Mode</code>，老實說，也沒有出現每個<code>MODE</code>的解析度，不知道它是怎樣決定的，反正先知道它的功能就好了。最後終於結束了，這樣就可以動了？寫到這邊我只覺得，似乎可以拉出來變成<code>Template</code>的地方還挺多的，之後再想想要怎樣重寫或是自己寫一個這東西出來才可以比較知道整個從無到有的步驟流程該怎樣寫。</p>

<p><code>
MODE_DEFAULT: Default camera mode.
MODE_OPTIMIZE_SPEED: Fast camera mode.
MODE_OPTIMIZE_QUALITY: High-quality camera mode.
</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.cpp  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span>
</span><span class='line'><span class="n">configureVideoBackground</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// Get the default video mode:</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">CameraDevice</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">cameraDevice</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">::</span><span class="n">CameraDevice</span><span class="o">::</span><span class="n">getInstance</span><span class="p">();</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">VideoMode</span> <span class="n">videoMode</span> <span class="o">=</span> <span class="n">cameraDevice</span><span class="p">.</span>
</span><span class='line'>                            <span class="n">getVideoMode</span><span class="p">(</span><span class="n">QCAR</span><span class="o">::</span><span class="n">CameraDevice</span><span class="o">::</span><span class="n">MODE_DEFAULT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// Configure the video background</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">VideoBackgroundConfig</span> <span class="n">config</span><span class="p">;</span>
</span><span class='line'><span class="n">config</span><span class="p">.</span><span class="n">mEnabled</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="n">config</span><span class="p">.</span><span class="n">mSynchronous</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="n">config</span><span class="p">.</span><span class="n">mPosition</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mf">0.0f</span><span class="p">;</span>
</span><span class='line'><span class="n">config</span><span class="p">.</span><span class="n">mPosition</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mf">0.0f</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">isActivityInPortraitMode</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">//LOG(&quot;configureVideoBackground PORTRAIT&quot;);</span>
</span><span class='line'>    <span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">videoMode</span><span class="p">.</span><span class="n">mHeight</span>
</span><span class='line'>                            <span class="o">*</span> <span class="p">(</span><span class="n">screenHeight</span> <span class="o">/</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">videoMode</span><span class="p">.</span><span class="n">mWidth</span><span class="p">);</span>
</span><span class='line'>    <span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">screenHeight</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">screenWidth</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Correcting rendering background size to handle missmatch between screen and video aspect ratios.&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">screenWidth</span><span class="p">;</span>
</span><span class='line'>        <span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">screenWidth</span> <span class="o">*</span>
</span><span class='line'>                          <span class="p">(</span><span class="n">videoMode</span><span class="p">.</span><span class="n">mWidth</span> <span class="o">/</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">videoMode</span><span class="p">.</span><span class="n">mHeight</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">//LOG(&quot;configureVideoBackground LANDSCAPE&quot;);</span>
</span><span class='line'>    <span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">screenWidth</span><span class="p">;</span>
</span><span class='line'>    <span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">videoMode</span><span class="p">.</span><span class="n">mHeight</span>
</span><span class='line'>                        <span class="o">*</span> <span class="p">(</span><span class="n">screenWidth</span> <span class="o">/</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">videoMode</span><span class="p">.</span><span class="n">mWidth</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">screenHeight</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Correcting rendering background size to handle missmatch between screen and video aspect ratios.&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">screenHeight</span>
</span><span class='line'>                            <span class="o">*</span> <span class="p">(</span><span class="n">videoMode</span><span class="p">.</span><span class="n">mWidth</span> <span class="o">/</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">videoMode</span><span class="p">.</span><span class="n">mHeight</span><span class="p">);</span>
</span><span class='line'>        <span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">screenHeight</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Configure Video Background : Video (%d,%d), Screen (%d,%d), mSize (%d,%d)&quot;</span><span class="p">,</span> <span class="n">videoMode</span><span class="p">.</span><span class="n">mWidth</span><span class="p">,</span> <span class="n">videoMode</span><span class="p">.</span><span class="n">mHeight</span><span class="p">,</span> <span class="n">screenWidth</span><span class="p">,</span> <span class="n">screenHeight</span><span class="p">,</span> <span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">config</span><span class="p">.</span><span class="n">mSize</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Set the config:</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">Renderer</span><span class="o">::</span><span class="n">getInstance</span><span class="p">().</span><span class="n">setVideoBackgroundConfig</span><span class="p">(</span><span class="n">config</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * NOTE: this method is synchronized because of a potential concurrent</span>
</span><span class='line'><span class="cm"> * access by ImageTargets::onResume() and InitQCARTask::onPostExecute().</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">updateApplicationStatus</span><span class="o">(</span><span class="kt">int</span> <span class="n">appStatus</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// Exit if there is no change in status:</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mAppStatus</span> <span class="o">==</span> <span class="n">appStatus</span><span class="o">)</span>
</span><span class='line'>        <span class="k">return</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Store new status value:</span>
</span><span class='line'>    <span class="n">mAppStatus</span> <span class="o">=</span> <span class="n">appStatus</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Execute application state-specific actions:</span>
</span><span class='line'>    <span class="k">switch</span> <span class="o">(</span><span class="n">mAppStatus</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_INIT_APP:</span>
</span><span class='line'>        <span class="c1">// Initialize application elements that do not rely on QCAR</span>
</span><span class='line'>        <span class="c1">// initialization:</span>
</span><span class='line'>        <span class="n">initApplication</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Proceed to next application initialization status:</span>
</span><span class='line'>        <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_INIT_QCAR</span><span class="o">);</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_INIT_QCAR:</span>
</span><span class='line'>        <span class="c1">// Initialize QCAR SDK asynchronously to avoid blocking the</span>
</span><span class='line'>        <span class="c1">// main (UI) thread.</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="c1">// NOTE: This task instance must be created and invoked on the</span>
</span><span class='line'>        <span class="c1">// UI thread and it can be executed only once!</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mInitQCARTask</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InitQCARTask</span><span class="o">();</span>
</span><span class='line'>            <span class="n">mInitQCARTask</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGE</span><span class="o">(</span><span class="s">&quot;cameraDemo&quot;</span><span class="o">,</span> <span class="s">&quot;Initializing QCAR SDK failed&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_INIT_TRACKER:</span>
</span><span class='line'>        <span class="c1">// Initialize the ImageTracker:</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">initTracker</span><span class="o">()</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Proceed to next application initialization status:</span>
</span><span class='line'>            <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_INIT_APP_AR</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_INIT_APP_AR:</span>
</span><span class='line'>        <span class="c1">// Initialize Augmented Reality-specific application elements</span>
</span><span class='line'>        <span class="c1">// that may rely on the fact that the QCAR SDK has been</span>
</span><span class='line'>        <span class="c1">// already initialized:</span>
</span><span class='line'>        <span class="n">initApplicationAR</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Proceed to next application initialization status:</span>
</span><span class='line'>        <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_LOAD_TRACKER</span><span class="o">);</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_LOAD_TRACKER:</span>
</span><span class='line'>        <span class="c1">// Load the tracking data set:</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="c1">// NOTE: This task instance must be created and invoked on the</span>
</span><span class='line'>        <span class="c1">// UI thread and it can be executed only once!</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mLoadTrackerTask</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LoadTrackerTask</span><span class="o">();</span>
</span><span class='line'>            <span class="n">mLoadTrackerTask</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGE</span><span class="o">(</span><span class="s">&quot;cameraDemo&quot;</span><span class="o">,</span> <span class="s">&quot;Loading tracking data set failed&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_INITED:</span>
</span><span class='line'>        <span class="c1">// Hint to the virtual machine that it would be a good time to</span>
</span><span class='line'>        <span class="c1">// run the garbage collector:</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="c1">// NOTE: This is only a hint. There is no guarantee that the</span>
</span><span class='line'>        <span class="c1">// garbage collector will actually be run.</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">gc</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Native post initialization:</span>
</span><span class='line'>        <span class="n">onQCARInitializedNative</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Activate the renderer:</span>
</span><span class='line'>        <span class="n">mRenderer</span><span class="o">.</span><span class="na">mIsActive</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Now add the GL surface view. It is important</span>
</span><span class='line'>        <span class="c1">// that the OpenGL ES surface view gets added</span>
</span><span class='line'>        <span class="c1">// BEFORE the camera is started and video</span>
</span><span class='line'>        <span class="c1">// background is configured.</span>
</span><span class='line'>        <span class="n">addContentView</span><span class="o">(</span><span class="n">mGlView</span><span class="o">,</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">,</span>
</span><span class='line'>                <span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Sets the UILayout to be drawn in front of the camera</span>
</span><span class='line'>        <span class="c1">// mUILayout.bringToFront();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Start the camera:</span>
</span><span class='line'>        <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_CAMERA_RUNNING</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_CAMERA_STOPPED:</span>
</span><span class='line'>        <span class="c1">// Call the native function to stop the camera:</span>
</span><span class='line'>        <span class="n">stopCamera</span><span class="o">();</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_CAMERA_RUNNING:</span>
</span><span class='line'>        <span class="c1">// Call the native function to start the camera:</span>
</span><span class='line'>        <span class="n">startCamera</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Hides the Loading Dialog</span>
</span><span class='line'>        <span class="c1">// loadingDialogHandler.sendEmptyMessage(HIDE_LOADING_DIALOG);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Sets the layout background to transparent</span>
</span><span class='line'>        <span class="c1">// mUILayout.setBackgroundColor(Color.TRANSPARENT);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Set continuous auto-focus if supported by the device,</span>
</span><span class='line'>        <span class="c1">// otherwise default back to regular auto-focus mode.</span>
</span><span class='line'>        <span class="c1">// This will be activated by a tap to the screen in this</span>
</span><span class='line'>        <span class="c1">// application.</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">setFocusMode</span><span class="o">(</span><span class="n">FOCUS_MODE_CONTINUOUS_AUTO</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mContAutofocus</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>            <span class="n">setFocusMode</span><span class="o">(</span><span class="n">FOCUS_MODE_NORMAL</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mContAutofocus</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">default</span><span class="o">:</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">&quot;Invalid application state&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vuforia-II: Camera(II)]]></title>
    <link href="http://cychiang.github.com/blog/2013/02/05/vuforia-ii-camera-ii/"/>
    <updated>2013-02-05T12:51:00+08:00</updated>
    <id>http://cychiang.github.com/blog/2013/02/05/vuforia-ii-camera-ii</id>
    <content type="html"><![CDATA[<p>經過比對vuforia的<code>Sample code</code>更加確定了幾件事情，就是很多基本的<code>Code</code>都是可以重複用的，例如：<code>Initial</code>的流程或是<code>jni</code>的設定等，大部份都是一樣的。除了特別用途需要用到特別的功能之外，基本上架構都是一樣。基於這個原因，我開始把可以重復用的部分抽離出來，建立一個<code>Template</code>，以後在用的時候就可以直接拿這個<code>Template</code>來新增、修改或是弄些比較有趣的<code>Demo</code>。我也將我所完成的<a href="https://github.com/cychiang/vuforiaDemo.git">Code</a>放到<a href="https://github.com/">github</a>上，也趁機熟悉一下git版本控制。老實說一個main_activity就要1xxx行，對我來講，真是有點看不下去。大致上知道流程，所以趁著還記憶猶新的時候，開始備忘一下。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGD</span><span class="o">(</span><span class="s">&quot;cameraDemo&quot;</span><span class="o">,</span> <span class="s">&quot;cameraDemo::onCreate&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>    <span class="c1">// Load any sample specific textures:</span>
</span><span class='line'>    <span class="c1">// mTextures = new Vector&amp;lt;Texture&amp;gt;();</span>
</span><span class='line'>    <span class="c1">// loadTextures();</span>
</span><span class='line'>    <span class="c1">// Query the QCAR initialization flags:</span>
</span><span class='line'>    <span class="n">mQCARFlags</span> <span class="o">=</span> <span class="n">getInitializationFlags</span><span class="o">();</span>
</span><span class='line'>    <span class="c1">// Creates the GestureDetector listener for processing double tap</span>
</span><span class='line'>    <span class="c1">// mGestureDetector = new GestureDetector(this, new GestureListener());</span>
</span><span class='line'>    <span class="c1">// Update the application status to start initializing application:</span>
</span><span class='line'>    <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_INIT_APP</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>首先我們針對<code>onCreate</code>的程式進入點當中來進行說明。在這邊當中，其實有些部分可以先行拿掉，如果只是要開啟<code>Camera</code>的功能的話，首先前面的<code>DebugLog</code>和<code>super.onCreate</code>等說明應該不用了。在<code>loadTextures()</code>當中，就是(前一篇Vuforia-II Camera)[http://cychiang.github.com/blog/2013/02/04/vuforia-ii-camera/]所提到的對於電腦圖學我需要的一些東西，詳細可以參考一下Wiki的說明，簡單說就是貼皮膚上去！就像穿衣服。而在<code>getInitializationFlags();</code>當中，主要是偵測<code>Device</code>支援的<code>OpenGL ES</code>的版本，那這部分會再呼叫<code>Native code</code>來解決，這部分未來會針對<code>Native code</code>部分進行說明。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/** Configure QCAR with the desired version of OpenGL ES. */</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">int</span> <span class="nf">getInitializationFlags</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">flags</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Query the native code:</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">getOpenGlEsVersionNative</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">flags</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">.</span><span class="na">GL_11</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">flags</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">.</span><span class="na">GL_20</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">flags</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最後會去呼叫<code>updateApplicationStatus()</code>這部份是用來更新目前的程式狀態，<code>Demo</code>程式寫的挺詳細的，把每個狀態該進行哪些工作都說明的很清楚。接著我們來看<code>updateApplicationStatus()</code>的實作內容。有點長，但大部份都是註解，有時候真的不得不佩服一些公司的<code>Code</code>註解寫的相當清楚<code>Trace</code>沒煩惱。在程式這邊的狀態定義為：</p>

<p><code>
// Application status constants:
private static final int APPSTATUS_UNINITED = -1;
private static final int APPSTATUS_INIT_APP = 0;
private static final int APPSTATUS_INIT_QCAR = 1;
private static final int APPSTATUS_INIT_TRACKER = 2;
private static final int APPSTATUS_INIT_APP_AR = 3;
private static final int APPSTATUS_LOAD_TRACKER = 4;
private static final int APPSTATUS_INITED = 5;
private static final int APPSTATUS_CAMERA_STOPPED = 6;
private static final int APPSTATUS_CAMERA_RUNNING = 7;
</code>
先釐清之後會比較了解之後程式的走向。在<code>onCreate()</code>當中，傳入的參數為<code>APPSTATUS_INIT_APP</code>，也就是<code>0</code>對應到接下來的<code>updateApplicationStatus(int appStatus)</code>當中會是在<code>case APPSTATUS_INIT_APP:</code>的區段裡面，而這裡面的執行內容是先執行<code>initApplication()</code>完成之後，執行<code>updateApplicationSatus(APPSTATUS_INIT_QCAR)</code>，也就是說，執行完成後會再重新進入這個<code>function</code>而帶入的參數是<code>APPSTATUS_INIT_QCAR</code>接下來，我們看一下<code>initApplication()</code>在進行哪些事情。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/** Initialize application GUI elements that are not related to AR. */</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">initApplication</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// Set the screen orientation:</span>
</span><span class='line'>    <span class="c1">// NOTE: Use SCREEN_ORIENTATION_LANDSCAPE or SCREEN_ORIENTATION_PORTRAIT</span>
</span><span class='line'>    <span class="c1">// to lock the screen orientation for this activity.</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">screenOrientation</span> <span class="o">=</span> <span class="n">ActivityInfo</span><span class="o">.</span><span class="na">SCREEN_ORIENTATION_SENSOR</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// This is necessary for enabling AutoRotation in the Augmented View</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">screenOrientation</span> <span class="o">==</span> <span class="n">ActivityInfo</span><span class="o">.</span><span class="na">SCREEN_ORIENTATION_SENSOR</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// NOTE: We use reflection here to see if the current platform</span>
</span><span class='line'>        <span class="c1">// supports the full sensor mode (available only on Gingerbread</span>
</span><span class='line'>        <span class="c1">// and above.</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// SCREEN_ORIENTATION_FULL_SENSOR is required to allow all</span>
</span><span class='line'>            <span class="c1">// 4 screen rotations if API level &amp;gt;= 9:</span>
</span><span class='line'>            <span class="n">Field</span> <span class="n">fullSensorField</span> <span class="o">=</span> <span class="n">ActivityInfo</span><span class="o">.</span><span class="na">class</span>
</span><span class='line'>                    <span class="o">.</span><span class="na">getField</span><span class="o">(</span><span class="s">&quot;SCREEN_ORIENTATION_FULL_SENSOR&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">screenOrientation</span> <span class="o">=</span> <span class="n">fullSensorField</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NoSuchFieldException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// App is running on API level &amp;lt; 9, do nothing.</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Apply screen orientation</span>
</span><span class='line'>    <span class="n">setRequestedOrientation</span><span class="o">(</span><span class="n">screenOrientation</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">updateActivityOrientation</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Query display dimensions:</span>
</span><span class='line'>    <span class="n">storeScreenDimensions</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// As long as this window is visible to the user, keep the device&#39;s</span>
</span><span class='line'>    <span class="c1">// screen turned on and bright:</span>
</span><span class='line'>    <span class="n">getWindow</span><span class="o">().</span><span class="na">setFlags</span><span class="o">(</span><span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_KEEP_SCREEN_ON</span><span class="o">,</span>
</span><span class='line'>            <span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_KEEP_SCREEN_ON</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在這段<code>function</code>似乎沒有進行什麼特別的<code>init</code>，全不可以看到的就是偵測目前裝置的方向就是你是拿直的還是橫的情況，而也會有一個<code>function</code>來記錄目前<code>screen</code>的狀態，應該是可以不用特別去了解細節。可能是因為要<code>Render</code>東西需要考慮方向性問題吧！好了，既然知道這邊是確定螢幕的方向內容，那可以先繼續下一步，也就是<code>updateApplicationStatus(APPSTATUS_INIT_QCAR);</code>，這邊在<code>case APPSTATUS_INIT_QCAR</code>當中主要是建立一個<code>Task</code>而這個<code>Task</code>為<code>InitQCARTask()</code>，接下來就進入我們<code>InitQCARTask()</code>來進行說明。然而需要注意一點就是，這邊在實現上為另外建立一個<code>Task</code>所以這邊是先<code>mInitQCARTask = new InitQCARTask();</code>接著<code>mInitQCARTask.execute()</code>。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/** An async task to initialize QCAR asynchronously. */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">class</span> <span class="nc">InitQCARTask</span> <span class="kd">extends</span> <span class="n">AsyncTask</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Integer</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// Initialize with invalid value:</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">mProgressValue</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="n">Boolean</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Prevent the onDestroy() method to overlap with initialization:</span>
</span><span class='line'>        <span class="kd">synchronized</span> <span class="o">(</span><span class="n">mShutdownLock</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">QCAR</span><span class="o">.</span><span class="na">setInitParameters</span><span class="o">(</span><span class="n">cameraDemo</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">mQCARFlags</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">do</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// QCAR.init() blocks until an initialization step is</span>
</span><span class='line'>                <span class="c1">// complete, then it proceeds to the next step and reports</span>
</span><span class='line'>                <span class="c1">// progress in percents (0 ... 100%).</span>
</span><span class='line'>                <span class="c1">// If QCAR.init() returns -1, it indicates an error.</span>
</span><span class='line'>                <span class="c1">// Initialization is done when progress has reached 100%.</span>
</span><span class='line'>                <span class="n">mProgressValue</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">.</span><span class="na">init</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// Publish the progress value:</span>
</span><span class='line'>                <span class="n">publishProgress</span><span class="o">(</span><span class="n">mProgressValue</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// We check whether the task has been canceled in the</span>
</span><span class='line'>                <span class="c1">// meantime (by calling AsyncTask.cancel(true)).</span>
</span><span class='line'>                <span class="c1">// and bail out if it has, thus stopping this thread.</span>
</span><span class='line'>                <span class="c1">// This is necessary as the AsyncTask will run to completion</span>
</span><span class='line'>                <span class="c1">// regardless of the status of the component that</span>
</span><span class='line'>                <span class="c1">// started is.</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">while</span> <span class="o">(!</span><span class="n">isCancelled</span><span class="o">()</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="n">mProgressValue</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;=</span> <span class="mi">0</span>
</span><span class='line'>                    <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="n">mProgressValue</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="mi">100</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="o">(</span><span class="n">mProgressValue</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onProgressUpdate</span><span class="o">(</span><span class="n">Integer</span><span class="o">...</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Do something with the progress value &quot;values[0]&quot;, e.g. update</span>
</span><span class='line'>        <span class="c1">// splash screen, progress bar, etc.</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">Boolean</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Done initializing QCAR, proceed to next application</span>
</span><span class='line'>        <span class="c1">// initialization status:</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGD</span><span class="o">(</span><span class="s">&quot;cameraDemo&quot;</span><span class="o">,</span>
</span><span class='line'>                    <span class="s">&quot;InitQCARTask::onPostExecute: QCAR &quot;</span>
</span><span class='line'>                            <span class="o">+</span> <span class="s">&quot;initialization successful&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_INIT_TRACKER</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Create dialog box for display error:</span>
</span><span class='line'>            <span class="n">AlertDialog</span> <span class="n">dialogError</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AlertDialog</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span>
</span><span class='line'>                    <span class="n">cameraDemo</span><span class="o">.</span><span class="na">this</span><span class="o">).</span><span class="na">create</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">dialogError</span><span class="o">.</span><span class="na">setButton</span><span class="o">(</span><span class="n">DialogInterface</span><span class="o">.</span><span class="na">BUTTON_POSITIVE</span><span class="o">,</span> <span class="s">&quot;Close&quot;</span><span class="o">,</span>
</span><span class='line'>                    <span class="k">new</span> <span class="n">DialogInterface</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">DialogInterface</span> <span class="n">dialog</span><span class="o">,</span>
</span><span class='line'>                                <span class="kt">int</span> <span class="n">which</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                            <span class="c1">// Exiting application:</span>
</span><span class='line'>                            <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">String</span> <span class="n">logMessage</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// NOTE: Check if initialization failed because the device is</span>
</span><span class='line'>            <span class="c1">// not supported. At this point the user should be informed</span>
</span><span class='line'>            <span class="c1">// with a message.</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">mProgressValue</span> <span class="o">==</span> <span class="n">QCAR</span><span class="o">.</span><span class="na">INIT_DEVICE_NOT_SUPPORTED</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">logMessage</span> <span class="o">=</span> <span class="s">&quot;Failed to initialize QCAR because this &quot;</span>
</span><span class='line'>                        <span class="o">+</span> <span class="s">&quot;device is not supported.&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">logMessage</span> <span class="o">=</span> <span class="s">&quot;Failed to initialize QCAR.&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Log error:</span>
</span><span class='line'>            <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGE</span><span class="o">(</span><span class="s">&quot;cameraDemo&quot;</span><span class="o">,</span> <span class="s">&quot;InitQCARTask::onPostExecute: &quot;</span>
</span><span class='line'>                    <span class="o">+</span> <span class="n">logMessage</span> <span class="o">+</span> <span class="s">&quot; Exiting.&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Show dialog box with error message:</span>
</span><span class='line'>            <span class="n">dialogError</span><span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="n">logMessage</span><span class="o">);</span>
</span><span class='line'>            <span class="n">dialogError</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在這段<code>InitQCARTask()</code>主要的<code>protected Boolean doInBackground(Void... params)</code>裡面，就兩件事情比較重要<code>QCAR.setInitParameters(cameraDemo.this, mQCARFlags);</code>和<code>QCAR.init()</code>但是！<code>QCAR.setInitParameters()</code>有點奇怪，因為在<a href="https://developer.vuforia.com/resources/api/namespace_q_c_a_r#a2e798f9af51c11ee0e13e2f9e32449a7">官方API當中</a>裡面參數只有一個，這是官方API寫的<code>int QCAR_API QCAR::setInitParameters ( int flags )</code>所以讓我覺得有點奇怪，為什麼會多一個<code>Activity</code>的參數，不過既然都需要，就塞進去吧。最後還需要一個<code>QCAR.init()</code>在這邊官方API說明為<code>Initializes QCAR.</code>詳細怎樣<code>Initializes</code>也沒有說明很清楚。不過有一個<code>iOS</code>的說明，整段說明為：<code>iOS: Called to initialize QCAR. Initialization is progressive, so this function should be called repeatedly until it returns 100 or a negative value. Returns an integer representing the percentage complete (negative on error).</code>，所以，看來就是這一個<code>doInBackground(Void… params)</code>會一直執行直到<code>mProgressValue</code>為100!整個就是讀取條，很酷。那基本上這邊就是只有進行<code>Initialization QCAR</code>的功用，最後完成時會進入到<code>onPostExecute()</code>，然後呼叫<code>updateApplicationStatus(APPSTATUS_INIT_TRACKER);</code>這邊又是另外一段<code>function</code>的開始，我在想，不要搞<code>Task</code>直接用應該也是可以，只是可能比較不保險！？接下來我們看一下<code>case APPSTATUS_INIT_TRACKER:</code>主要有一個<code>function</code>就是<code>initTracker()</code>這個是<code>native code</code>不得已只好先跳到<code>native code</code>來<code>trace</code>。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.cpp  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">JNIEXPORT</span> <span class="kt">int</span> <span class="n">JNICALL</span>
</span><span class='line'><span class="n">Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_initTracker</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jobject</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_initTracker&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Initialize the image tracker:</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">TrackerManager</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">trackerManager</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">::</span><span class="n">TrackerManager</span><span class="o">::</span><span class="n">getInstance</span><span class="p">();</span>
</span><span class='line'><span class="n">QCAR</span><span class="o">::</span><span class="n">Tracker</span><span class="o">*</span> <span class="n">tracker</span> <span class="o">=</span> <span class="n">trackerManager</span><span class="p">.</span><span class="n">initTracker</span><span class="p">(</span><span class="n">QCAR</span><span class="o">::</span><span class="n">Tracker</span><span class="o">::</span><span class="n">IMAGE_TRACKER</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">tracker</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Failed to initialize ImageTracker.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">LOG</span><span class="p">(</span><span class="s">&quot;Successfully initialized ImageTracker.&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在<code>native code</code>當中，主要有兩個用來<code>Initialize</code>的<code>function</code>，<code>QCAR::TrackerManager</code>和<code>QCAR::Tracker* tracker</code>在這邊參考一下<a href="https://developer.vuforia.com/resources/api/class_q_c_a_r_1_1_tracker_manager#details">官方的API</a>和<a href="https://developer.vuforia.com/resources/api/class_q_c_a_r_1_1_tracker">這個</a>，雖然官方API有些說明很兩光或是不清楚，但是大致上還是可以理解。首先在<code>QCAR::TrackerManager</code>當中，主要就是需要取得一個<code>TrackerManager</code>的<code>Instance()</code>接著針對這個<code>Instance</code>進行操作。接著設定<code>Tracker</code>用來追蹤所偵測到的目標而在所追蹤的目標也需要初始化它的類型，這就是<code>trackerManager.initTracker()</code>所做的事情。在這邊當中只有兩種<code>IMAGE_TRACKER-Tracks ImageTargets and MultiTargets.</code>以及<code>MARKER_TRACKER-Tracks Markers.</code>這兩種，那關於<code>Image Targets</code>、<code>MultiTargets</code>以及<code>Tracks Markers</code>在<a href="http://cychiang.github.com/blog/2013/01/31/research-on-vuforia-i/">Vuforia-I</a>有說明。OK，這邊想要補充一下什麼是<code>Instance</code>這是軟工的一個名詞，定義說明如下。</p>

<p><code>
Instance：An instanceis an object created from a class. The class describes the (behavior and information)structure of the instance, while the current state of the instance is defined by the operations performed on the instance.
</code>
節錄資料來源：<a href="http://teddy-chen-tw.blogspot.tw/2012/01/2object-class-instance.html">搞笑軟工</a></p>

<p>在完成這些動作之後，接著進入<code>updateApplicationStatus(APPSTATUS_INIT_APP_AR);</code>今天寫到這邊，改天繼續說明和<code>Trace</code>。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cameraDemo.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * NOTE: this method is synchronized because of a potential concurrent</span>
</span><span class='line'><span class="cm"> * access by ImageTargets::onResume() and InitQCARTask::onPostExecute().</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">updateApplicationStatus</span><span class="o">(</span><span class="kt">int</span> <span class="n">appStatus</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// Exit if there is no change in status:</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mAppStatus</span> <span class="o">==</span> <span class="n">appStatus</span><span class="o">)</span>
</span><span class='line'>        <span class="k">return</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Store new status value:</span>
</span><span class='line'>    <span class="n">mAppStatus</span> <span class="o">=</span> <span class="n">appStatus</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Execute application state-specific actions:</span>
</span><span class='line'>    <span class="k">switch</span> <span class="o">(</span><span class="n">mAppStatus</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_INIT_APP:</span>
</span><span class='line'>        <span class="c1">// Initialize application elements that do not rely on QCAR</span>
</span><span class='line'>        <span class="c1">// initialization:</span>
</span><span class='line'>        <span class="n">initApplication</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Proceed to next application initialization status:</span>
</span><span class='line'>        <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_INIT_QCAR</span><span class="o">);</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_INIT_QCAR:</span>
</span><span class='line'>        <span class="c1">// Initialize QCAR SDK asynchronously to avoid blocking the</span>
</span><span class='line'>        <span class="c1">// main (UI) thread.</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="c1">// NOTE: This task instance must be created and invoked on the</span>
</span><span class='line'>        <span class="c1">// UI thread and it can be executed only once!</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mInitQCARTask</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InitQCARTask</span><span class="o">();</span>
</span><span class='line'>            <span class="n">mInitQCARTask</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGE</span><span class="o">(</span><span class="s">&quot;cameraDemo&quot;</span><span class="o">,</span> <span class="s">&quot;Initializing QCAR SDK failed&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_INIT_TRACKER:</span>
</span><span class='line'>        <span class="c1">// Initialize the ImageTracker:</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">initTracker</span><span class="o">()</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Proceed to next application initialization status:</span>
</span><span class='line'>            <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_INIT_APP_AR</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_INIT_APP_AR:</span>
</span><span class='line'>        <span class="c1">// Initialize Augmented Reality-specific application elements</span>
</span><span class='line'>        <span class="c1">// that may rely on the fact that the QCAR SDK has been</span>
</span><span class='line'>        <span class="c1">// already initialized:</span>
</span><span class='line'>        <span class="n">initApplicationAR</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Proceed to next application initialization status:</span>
</span><span class='line'>        <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_LOAD_TRACKER</span><span class="o">);</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_LOAD_TRACKER:</span>
</span><span class='line'>        <span class="c1">// Load the tracking data set:</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="c1">// NOTE: This task instance must be created and invoked on the</span>
</span><span class='line'>        <span class="c1">// UI thread and it can be executed only once!</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mLoadTrackerTask</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LoadTrackerTask</span><span class="o">();</span>
</span><span class='line'>            <span class="n">mLoadTrackerTask</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGE</span><span class="o">(</span><span class="s">&quot;cameraDemo&quot;</span><span class="o">,</span> <span class="s">&quot;Loading tracking data set failed&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_INITED:</span>
</span><span class='line'>        <span class="c1">// Hint to the virtual machine that it would be a good time to</span>
</span><span class='line'>        <span class="c1">// run the garbage collector:</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="c1">// NOTE: This is only a hint. There is no guarantee that the</span>
</span><span class='line'>        <span class="c1">// garbage collector will actually be run.</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">gc</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Native post initialization:</span>
</span><span class='line'>        <span class="n">onQCARInitializedNative</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Activate the renderer:</span>
</span><span class='line'>        <span class="n">mRenderer</span><span class="o">.</span><span class="na">mIsActive</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Now add the GL surface view. It is important</span>
</span><span class='line'>        <span class="c1">// that the OpenGL ES surface view gets added</span>
</span><span class='line'>        <span class="c1">// BEFORE the camera is started and video</span>
</span><span class='line'>        <span class="c1">// background is configured.</span>
</span><span class='line'>        <span class="n">addContentView</span><span class="o">(</span><span class="n">mGlView</span><span class="o">,</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">,</span>
</span><span class='line'>                <span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Sets the UILayout to be drawn in front of the camera</span>
</span><span class='line'>        <span class="c1">// mUILayout.bringToFront();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Start the camera:</span>
</span><span class='line'>        <span class="n">updateApplicationStatus</span><span class="o">(</span><span class="n">APPSTATUS_CAMERA_RUNNING</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_CAMERA_STOPPED:</span>
</span><span class='line'>        <span class="c1">// Call the native function to stop the camera:</span>
</span><span class='line'>        <span class="n">stopCamera</span><span class="o">();</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="nl">APPSTATUS_CAMERA_RUNNING:</span>
</span><span class='line'>        <span class="c1">// Call the native function to start the camera:</span>
</span><span class='line'>        <span class="n">startCamera</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Hides the Loading Dialog</span>
</span><span class='line'>        <span class="c1">// loadingDialogHandler.sendEmptyMessage(HIDE_LOADING_DIALOG);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Sets the layout background to transparent</span>
</span><span class='line'>        <span class="c1">// mUILayout.setBackgroundColor(Color.TRANSPARENT);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Set continuous auto-focus if supported by the device,</span>
</span><span class='line'>        <span class="c1">// otherwise default back to regular auto-focus mode.</span>
</span><span class='line'>        <span class="c1">// This will be activated by a tap to the screen in this</span>
</span><span class='line'>        <span class="c1">// application.</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">setFocusMode</span><span class="o">(</span><span class="n">FOCUS_MODE_CONTINUOUS_AUTO</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mContAutofocus</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>            <span class="n">setFocusMode</span><span class="o">(</span><span class="n">FOCUS_MODE_NORMAL</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mContAutofocus</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">default</span><span class="o">:</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">&quot;Invalid application state&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vuforia-II: Camera]]></title>
    <link href="http://cychiang.github.com/blog/2013/02/04/vuforia-ii-camera/"/>
    <updated>2013-02-04T14:23:00+08:00</updated>
    <id>http://cychiang.github.com/blog/2013/02/04/vuforia-ii-camera</id>
    <content type="html"><![CDATA[<p>為了能夠完全掌握<code>vuforia</code>怎樣在<code>Android</code>上使用，個人的風格就是逐步拆解範例程式的<code>Code</code>然後做一個通盤了解，不僅止於在能修改這上面。在<code>vuforia</code>的範例程式當中，主要有分幾個部分：</p>

<ul>
<li>版權聲明</li>
<li>讀取畫面</li>
<li>開啟camera</li>
<li>執行AR演算法</li>
<li>是否有找到標籤，有則Render物件沒有則跳過</li>
</ul>


<p>以上大概是每個範例程式所會進行的事情，那在這當中最基本的大概就是開啟<code>Camera</code>吧！在建立完專案之後，先加入一下使用Camera的權限到Android程式當中。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AndroidManifest.xml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span><span class="ni">&amp;lt;</span>?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
</span><span class='line'><span class="ni">&amp;lt;</span>manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>package=&quot;com.example.vuforiacamera&quot;
</span><span class='line'>android:versionCode=&quot;1&quot;
</span><span class='line'>android:versionName=&quot;1.0&quot; <span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>uses-sdk
</span><span class='line'>    android:minSdkVersion=&quot;15&quot;
</span><span class='line'>    android:targetSdkVersion=&quot;15&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>!-- Add permission of camera --<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>uses-feature android:name=&quot;android.hardware.camera&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>uses-permission android:name=&quot;android.permission.CAMERA&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>application
</span><span class='line'>    android:allowBackup=&quot;true&quot;
</span><span class='line'>    android:icon=&quot;@drawable/ic_launcher&quot;
</span><span class='line'>    android:label=&quot;@string/app_name&quot;
</span><span class='line'>    android:theme=&quot;@style/AppTheme&quot; <span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>activity
</span><span class='line'>        android:name=&quot;com.example.vuforiacamera.MainActivity&quot;
</span><span class='line'>        android:configChanges=&quot;orientation|keyboardHidden&quot;
</span><span class='line'>        android:label=&quot;@string/app_name&quot; <span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>intent-filter<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>action android:name=&quot;android.intent.action.MAIN&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="ni">&amp;lt;</span>category android:name=&quot;android.intent.category.LAUNCHER&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/intent-filter<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/activity<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>/application<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/manifest&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>根據之前分析的範例程式的結果，裡面分為幾個步驟：<code>Init_QCAR</code>-><code>Init_Tracker</code>-><code>InitApp_AR</code>-><code>InitLoader_Tracker</code>詳細過程內容，看看之後有沒有興趣補上，以上名字不一定正確因為是自己寫的簡解XD，但是都在vuforia範例程式當中可以找到。那在<code>Init_QCAR</code>以及<code>Init_Tracker</code>當中，主要是讀取<code>QCAR</code>的<code>Library</code>也就是<code>vuforia</code>在<code>Init_Tracker</code>當中，為讀取資料庫，資料庫是什麼東西？可以參考<a href="http://cychiang.github.com/blog/2013/01/31/research-on-vuforia-i/">Vuforia-I</a>的文章。
在這範例程式當中，使用了<code>OpenGL ES</code>來當作繪圖的主要工具之一，其中也有一大段的<code>Code</code>在偵測平台支援<code>OpenGL ES 1.1 or OpenGL ES 2.0</code>在Camera讀取影像並且貼到<code>GLSurfaceView</code>這部分是必需要能釐清的部分，而這中間包含了一些<code>OpenGL ES</code>的寫法，說真的也不是很了解XD。總覺得需要寫很久…就分部分寫吧！先來了解一下<code>Sample Code</code>它所提寫的<code>QCARSampleGLView.java</code>，其實裡面有很多設定完全不知所以然，在這邊就慢慢解說和了解這<code>Code</code>所需要完成的事情。了解之後也比較好釐清一個<code>OpenGL ES</code>程式該怎樣寫。整段貼上，連同聲明！</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>QCARSampleGLView.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="cm">/*==============================================================================&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;pre&gt;&lt;code&gt;        Copyright (c) 2010-2012 QUALCOMM Austria Research Center GmbH.</span>
</span><span class='line'><span class="cm">        All Rights Reserved.</span>
</span><span class='line'><span class="cm">        Qualcomm Confidential and Proprietary</span>
</span><span class='line'><span class="cm">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;p&gt;==============================================================================*/</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">qualcomm</span><span class="o">.</span><span class="na">QCARSamples</span><span class="o">.</span><span class="na">ImageTargets</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">com.qualcomm.QCAR.QCAR</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">javax.microedition.khronos.egl.EGL10</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.microedition.khronos.egl.EGLConfig</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.microedition.khronos.egl.EGLContext</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.microedition.khronos.egl.EGLDisplay</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.PixelFormat</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.opengl.GLSurfaceView</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span> <span class="n">QCARSampleGLView</span> <span class="n">is</span> <span class="n">a</span> <span class="n">support</span> <span class="kd">class</span> <span class="nc">for</span> <span class="n">the</span> <span class="n">QCAR</span> <span class="n">samples</span> <span class="n">applications</span><span class="o">.</span>
</span><span class='line'> <span class="o">*</span>
</span><span class='line'> <span class="o">*</span>  <span class="n">Responsible</span> <span class="k">for</span> <span class="n">setting</span> <span class="n">up</span> <span class="n">and</span> <span class="n">configuring</span> <span class="n">the</span> <span class="n">OpenGL</span> <span class="n">surface</span> <span class="n">view</span><span class="o">.</span>
</span><span class='line'> <span class="o">*</span>
</span><span class='line'> <span class="o">*</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">QCARSampleGLView</span> <span class="kd">extends</span> <span class="n">GLSurfaceView</span>
</span><span class='line'><span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="n">mUseOpenGLES2</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Constructor. */</span>
</span><span class='line'><span class="kd">public</span> <span class="nf">QCARSampleGLView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Initialization. */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">(</span><span class="kt">int</span> <span class="n">flags</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">translucent</span><span class="o">,</span> <span class="kt">int</span> <span class="n">depth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">stencil</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="c1">// By default GLSurfaceView tries to find a surface that is as close</span>
</span><span class='line'>    <span class="c1">// as possible to a 16-bit RGB frame buffer with a 16-bit depth buffer.</span>
</span><span class='line'>    <span class="c1">// This function can override the default values and set custom values.</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Extract OpenGL ES version from flags</span>
</span><span class='line'>    <span class="n">mUseOpenGLES2</span> <span class="o">=</span> <span class="o">(</span><span class="n">flags</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="n">QCAR</span><span class="o">.</span><span class="na">GL_20</span><span class="o">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// By default, GLSurfaceView() creates a RGB_565 opaque surface.</span>
</span><span class='line'>    <span class="c1">// If we want a translucent one, we should change the surface&#39;s</span>
</span><span class='line'>    <span class="c1">// format here, using PixelFormat.TRANSLUCENT for GL Surfaces</span>
</span><span class='line'>    <span class="c1">// is interpreted as any 32-bit surface with alpha by SurfaceFlinger.</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGI</span><span class="o">(</span><span class="s">&quot;Using OpenGL ES &quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">mUseOpenGLES2</span> <span class="o">?</span> <span class="s">&quot;2.0&quot;</span> <span class="o">:</span> <span class="s">&quot;1.x&quot;</span><span class="o">));</span>
</span><span class='line'>    <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGI</span><span class="o">(</span><span class="s">&quot;Using &quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">translucent</span> <span class="o">?</span> <span class="s">&quot;translucent&quot;</span> <span class="o">:</span> <span class="s">&quot;opaque&quot;</span><span class="o">)</span> <span class="o">+</span>
</span><span class='line'>        <span class="s">&quot; GLView, depth buffer size: &quot;</span> <span class="o">+</span> <span class="n">depth</span> <span class="o">+</span> <span class="s">&quot;, stencil size: &quot;</span> <span class="o">+</span>
</span><span class='line'>        <span class="n">stencil</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// If required set translucent format to allow camera image to</span>
</span><span class='line'>    <span class="c1">// show through in the background</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">translucent</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">getHolder</span><span class="o">().</span><span class="na">setFormat</span><span class="o">(</span><span class="n">PixelFormat</span><span class="o">.</span><span class="na">TRANSLUCENT</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Setup the context factory for 1.x / 2.0 rendering</span>
</span><span class='line'>    <span class="n">setEGLContextFactory</span><span class="o">(</span><span class="k">new</span> <span class="n">ContextFactory</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// We need to choose an EGLConfig that matches the format of</span>
</span><span class='line'>    <span class="c1">// our surface exactly. This is going to be done in our</span>
</span><span class='line'>    <span class="c1">// custom config chooser. See ConfigChooser class definition</span>
</span><span class='line'>    <span class="c1">// below.</span>
</span><span class='line'>    <span class="n">setEGLConfigChooser</span><span class="o">(</span> <span class="n">translucent</span> <span class="o">?</span>
</span><span class='line'>                         <span class="k">new</span> <span class="nf">ConfigChooser</span><span class="o">(</span><span class="mi">8</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="n">depth</span><span class="o">,</span> <span class="n">stencil</span><span class="o">)</span> <span class="o">:</span>
</span><span class='line'>                         <span class="k">new</span> <span class="nf">ConfigChooser</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">depth</span><span class="o">,</span> <span class="n">stencil</span><span class="o">)</span> <span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Creates OpenGL contexts. */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">ContextFactory</span> <span class="kd">implements</span>
</span><span class='line'>    <span class="n">GLSurfaceView</span><span class="o">.</span><span class="na">EGLContextFactory</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">EGL_CONTEXT_CLIENT_VERSION</span> <span class="o">=</span> <span class="mh">0x3098</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">EGLContext</span> <span class="nf">createContext</span><span class="o">(</span><span class="n">EGL10</span> <span class="n">egl</span><span class="o">,</span> <span class="n">EGLDisplay</span> <span class="n">display</span><span class="o">,</span>
</span><span class='line'>        <span class="n">EGLConfig</span> <span class="n">eglConfig</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="n">EGLContext</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mUseOpenGLES2</span><span class="o">)</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGI</span><span class="o">(</span><span class="s">&quot;Creating OpenGL ES 2.0 context&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">checkEglError</span><span class="o">(</span><span class="s">&quot;Before eglCreateContext&quot;</span><span class="o">,</span> <span class="n">egl</span><span class="o">);</span>
</span><span class='line'>            <span class="kt">int</span><span class="o">[]</span> <span class="n">attrib_list_gl20</span> <span class="o">=</span> <span class="o">{</span><span class="n">EGL_CONTEXT_CLIENT_VERSION</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_NONE</span><span class="o">};</span>
</span><span class='line'>            <span class="n">context</span> <span class="o">=</span> <span class="n">egl</span><span class="o">.</span><span class="na">eglCreateContext</span><span class="o">(</span><span class="n">display</span><span class="o">,</span> <span class="n">eglConfig</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_NO_CONTEXT</span><span class="o">,</span> <span class="n">attrib_list_gl20</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGI</span><span class="o">(</span><span class="s">&quot;Creating OpenGL ES 1.x context&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">checkEglError</span><span class="o">(</span><span class="s">&quot;Before eglCreateContext&quot;</span><span class="o">,</span> <span class="n">egl</span><span class="o">);</span>
</span><span class='line'>            <span class="kt">int</span><span class="o">[]</span> <span class="n">attrib_list_gl1x</span> <span class="o">=</span> <span class="o">{</span><span class="n">EGL_CONTEXT_CLIENT_VERSION</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_NONE</span><span class="o">};</span>
</span><span class='line'>            <span class="n">context</span> <span class="o">=</span> <span class="n">egl</span><span class="o">.</span><span class="na">eglCreateContext</span><span class="o">(</span><span class="n">display</span><span class="o">,</span> <span class="n">eglConfig</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_NO_CONTEXT</span><span class="o">,</span> <span class="n">attrib_list_gl1x</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">checkEglError</span><span class="o">(</span><span class="s">&quot;After eglCreateContext&quot;</span><span class="o">,</span> <span class="n">egl</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">destroyContext</span><span class="o">(</span><span class="n">EGL10</span> <span class="n">egl</span><span class="o">,</span> <span class="n">EGLDisplay</span> <span class="n">display</span><span class="o">,</span>
</span><span class='line'>        <span class="n">EGLContext</span> <span class="n">context</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="n">egl</span><span class="o">.</span><span class="na">eglDestroyContext</span><span class="o">(</span><span class="n">display</span><span class="o">,</span> <span class="n">context</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Checks the OpenGL error. */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">checkEglError</span><span class="o">(</span><span class="n">String</span> <span class="n">prompt</span><span class="o">,</span> <span class="n">EGL10</span> <span class="n">egl</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">error</span><span class="o">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="o">((</span><span class="n">error</span> <span class="o">=</span> <span class="n">egl</span><span class="o">.</span><span class="na">eglGetError</span><span class="o">())</span> <span class="o">!=</span> <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_SUCCESS</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGE</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%s: EGL error: 0x%x&quot;</span><span class="o">,</span> <span class="n">prompt</span><span class="o">,</span> <span class="n">error</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/** The config chooser. */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">ConfigChooser</span> <span class="kd">implements</span> <span class="n">GLSurfaceView</span><span class="o">.</span><span class="na">EGLConfigChooser</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">ConfigChooser</span><span class="o">(</span><span class="kt">int</span> <span class="n">r</span><span class="o">,</span> <span class="kt">int</span> <span class="n">g</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">depth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">stencil</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="n">mRedSize</span> <span class="o">=</span> <span class="n">r</span><span class="o">;</span>
</span><span class='line'>        <span class="n">mGreenSize</span> <span class="o">=</span> <span class="n">g</span><span class="o">;</span>
</span><span class='line'>        <span class="n">mBlueSize</span> <span class="o">=</span> <span class="n">b</span><span class="o">;</span>
</span><span class='line'>        <span class="n">mAlphaSize</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
</span><span class='line'>        <span class="n">mDepthSize</span> <span class="o">=</span> <span class="n">depth</span><span class="o">;</span>
</span><span class='line'>        <span class="n">mStencilSize</span> <span class="o">=</span> <span class="n">stencil</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">EGLConfig</span> <span class="nf">getMatchingConfig</span><span class="o">(</span><span class="n">EGL10</span> <span class="n">egl</span><span class="o">,</span> <span class="n">EGLDisplay</span> <span class="n">display</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">int</span><span class="o">[]</span> <span class="n">configAttribs</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Get the number of minimally matching EGL configurations</span>
</span><span class='line'>        <span class="kt">int</span><span class="o">[]</span> <span class="n">num_config</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
</span><span class='line'>        <span class="n">egl</span><span class="o">.</span><span class="na">eglChooseConfig</span><span class="o">(</span><span class="n">display</span><span class="o">,</span> <span class="n">configAttribs</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">num_config</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">int</span> <span class="n">numConfigs</span> <span class="o">=</span> <span class="n">num_config</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">numConfigs</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;=</span> <span class="mi">0</span><span class="o">)</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span><span class="s">&quot;No matching EGL configs&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Allocate then read the array of minimally matching EGL configs</span>
</span><span class='line'>        <span class="n">EGLConfig</span><span class="o">[]</span> <span class="n">configs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EGLConfig</span><span class="o">[</span><span class="n">numConfigs</span><span class="o">];</span>
</span><span class='line'>        <span class="n">egl</span><span class="o">.</span><span class="na">eglChooseConfig</span><span class="o">(</span><span class="n">display</span><span class="o">,</span> <span class="n">configAttribs</span><span class="o">,</span> <span class="n">configs</span><span class="o">,</span> <span class="n">numConfigs</span><span class="o">,</span>
</span><span class='line'>            <span class="n">num_config</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Now return the &quot;best&quot; one</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">chooseConfig</span><span class="o">(</span><span class="n">egl</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="n">configs</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">EGLConfig</span> <span class="nf">chooseConfig</span><span class="o">(</span><span class="n">EGL10</span> <span class="n">egl</span><span class="o">,</span> <span class="n">EGLDisplay</span> <span class="n">display</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mUseOpenGLES2</span><span class="o">)</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="c1">// This EGL config specification is used to specify 2.0</span>
</span><span class='line'>            <span class="c1">// rendering. We use a minimum size of 4 bits for</span>
</span><span class='line'>            <span class="c1">// red/green/blue, but will perform actual matching in</span>
</span><span class='line'>            <span class="c1">// chooseConfig() below.</span>
</span><span class='line'>            <span class="kd">final</span> <span class="kt">int</span> <span class="n">EGL_OPENGL_ES2_BIT</span> <span class="o">=</span> <span class="mh">0x0004</span><span class="o">;</span>
</span><span class='line'>            <span class="kd">final</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">s_configAttribs_gl20</span> <span class="o">=</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_RED_SIZE</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_GREEN_SIZE</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_BLUE_SIZE</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_RENDERABLE_TYPE</span><span class="o">,</span> <span class="n">EGL_OPENGL_ES2_BIT</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_NONE</span>
</span><span class='line'>            <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="nf">getMatchingConfig</span><span class="o">(</span><span class="n">egl</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="n">s_configAttribs_gl20</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="kd">final</span> <span class="kt">int</span> <span class="n">EGL_OPENGL_ES1X_BIT</span> <span class="o">=</span> <span class="mh">0x0001</span><span class="o">;</span>
</span><span class='line'>            <span class="kd">final</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">s_configAttribs_gl1x</span> <span class="o">=</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_RED_SIZE</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_GREEN_SIZE</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_BLUE_SIZE</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_RENDERABLE_TYPE</span><span class="o">,</span> <span class="n">EGL_OPENGL_ES1X_BIT</span><span class="o">,</span>
</span><span class='line'>                <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_NONE</span>
</span><span class='line'>            <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="nf">getMatchingConfig</span><span class="o">(</span><span class="n">egl</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="n">s_configAttribs_gl1x</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">EGLConfig</span> <span class="nf">chooseConfig</span><span class="o">(</span>
</span><span class='line'>        <span class="n">EGL10</span> <span class="n">egl</span><span class="o">,</span> <span class="n">EGLDisplay</span> <span class="n">display</span><span class="o">,</span> <span class="n">EGLConfig</span><span class="o">[]</span> <span class="n">configs</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="k">for</span><span class="o">(</span><span class="n">EGLConfig</span> <span class="n">config</span> <span class="o">:</span> <span class="n">configs</span><span class="o">)</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">findConfigAttrib</span><span class="o">(</span><span class="n">egl</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="n">config</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_DEPTH_SIZE</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="n">findConfigAttrib</span><span class="o">(</span><span class="n">egl</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="n">config</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_STENCIL_SIZE</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// We need at least mDepthSize and mStencilSize bits</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">d</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="n">mDepthSize</span> <span class="o">||</span> <span class="n">s</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="n">mStencilSize</span><span class="o">)</span>
</span><span class='line'>                <span class="k">continue</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// We want an *exact* match for red/green/blue/alpha</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="n">findConfigAttrib</span><span class="o">(</span><span class="n">egl</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="n">config</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_RED_SIZE</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">g</span> <span class="o">=</span> <span class="n">findConfigAttrib</span><span class="o">(</span><span class="n">egl</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="n">config</span><span class="o">,</span>
</span><span class='line'>                        <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_GREEN_SIZE</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">findConfigAttrib</span><span class="o">(</span><span class="n">egl</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="n">config</span><span class="o">,</span>
</span><span class='line'>                        <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_BLUE_SIZE</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">findConfigAttrib</span><span class="o">(</span><span class="n">egl</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="n">config</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">EGL10</span><span class="o">.</span><span class="na">EGL_ALPHA_SIZE</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">r</span> <span class="o">==</span> <span class="n">mRedSize</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span>
</span><span class='line'>                <span class="n">g</span> <span class="o">==</span> <span class="n">mGreenSize</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span>
</span><span class='line'>                <span class="n">b</span> <span class="o">==</span> <span class="n">mBlueSize</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span>
</span><span class='line'>                <span class="n">a</span> <span class="o">==</span> <span class="n">mAlphaSize</span><span class="o">)</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">config</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">findConfigAttrib</span><span class="o">(</span>
</span><span class='line'>        <span class="n">EGL10</span> <span class="n">egl</span><span class="o">,</span> <span class="n">EGLDisplay</span> <span class="n">display</span><span class="o">,</span> <span class="n">EGLConfig</span> <span class="n">config</span><span class="o">,</span> <span class="kt">int</span> <span class="n">attribute</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">defaultValue</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">egl</span><span class="o">.</span><span class="na">eglGetConfigAttrib</span><span class="o">(</span><span class="n">display</span><span class="o">,</span> <span class="n">config</span><span class="o">,</span> <span class="n">attribute</span><span class="o">,</span> <span class="n">mValue</span><span class="o">))</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">mValue</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">defaultValue</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Subclasses can adjust these values:</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">int</span> <span class="n">mRedSize</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">int</span> <span class="n">mGreenSize</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">int</span> <span class="n">mBlueSize</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">int</span> <span class="n">mAlphaSize</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">int</span> <span class="n">mDepthSize</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">int</span> <span class="n">mStencilSize</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">mValue</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>首先在這<code>Code</code>當中，主要是用來<code>Initialization GLView</code>，也許是因為<code>OpenGL ES</code>版本差異？<code>Initialization</code>主要有三件事情：</p>

<ul>
<li>偵測並確認<code>OpenGL ES</code>版本</li>
<li>EGLContextFactory</li>
<li>EGLConfigChooser</li>
</ul>


<p>根據尋找的結果是，在<code>OpenGL</code>當中，在進行<code>Render</code>(渲染？)需要先進行<code>EGLContextFactory</code>和<code>EGLConfigChooser</code>，什麼是<code>Render</code>？可以參考一下<a href="http://zh.wikipedia.org/wiki/%E6%B8%B2%E6%9F%93">渲染-Wiki</a>，主要就是：幾何、視點、紋理以及照明訊息。老實說，完全不明白…看樣子需要去學個電腦圖學會更清楚才對。說真的<code>OpenGL</code>的程式，真的跟天書一樣…後來了解到，這只是設定<code>OpenGL ES</code>所可能需要用到的東西，大概是因為需要進行<code>3D</code>的貼圖吧！所以才需要這些幾何、視點等資料，為了讓<code>Render</code>的物件更逼真！？後來看到主程式的<code>Code</code>大概也說明了這件事情。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ImageTargets.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="kt">void</span> <span class="n">initApplicationAR</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="c1">// Do application initialization in native code (e.g. registering</span>
</span><span class='line'>    <span class="c1">// callbacks, etc.):</span>
</span><span class='line'>    <span class="n">initApplicationNative</span><span class="o">(</span><span class="n">mScreenWidth</span><span class="o">,</span> <span class="n">mScreenHeight</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create OpenGL ES view:</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">depthSize</span> <span class="o">=</span> <span class="mi">16</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">stencilSize</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">translucent</span> <span class="o">=</span> <span class="n">QCAR</span><span class="o">.</span><span class="na">requiresAlpha</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mGlView</span> <span class="o">=</span> <span class="k">new</span> <span class="n">QCARSampleGLView</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>    <span class="n">mGlView</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">mQCARFlags</span><span class="o">,</span> <span class="n">translucent</span><span class="o">,</span> <span class="n">depthSize</span><span class="o">,</span> <span class="n">stencilSize</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mRenderer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageTargetsRenderer</span><span class="o">();</span>
</span><span class='line'>    <span class="n">mRenderer</span><span class="o">.</span><span class="na">mActivity</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
</span><span class='line'>    <span class="n">mGlView</span><span class="o">.</span><span class="na">setRenderer</span><span class="o">(</span><span class="n">mRenderer</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">LayoutInflater</span> <span class="n">inflater</span> <span class="o">=</span> <span class="n">LayoutInflater</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>    <span class="n">mUILayout</span> <span class="o">=</span> <span class="o">(</span><span class="n">RelativeLayout</span><span class="o">)</span> <span class="n">inflater</span><span class="o">.</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">camera_overlay</span><span class="o">,</span>
</span><span class='line'>            <span class="kc">null</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mUILayout</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">View</span><span class="o">.</span><span class="na">VISIBLE</span><span class="o">);</span>
</span><span class='line'>    <span class="n">mUILayout</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Gets a reference to the loading dialog</span>
</span><span class='line'>    <span class="n">mLoadingDialogContainer</span> <span class="o">=</span> <span class="n">mUILayout</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">loading_indicator</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Shows the loading indicator at start</span>
</span><span class='line'>    <span class="n">loadingDialogHandler</span><span class="o">.</span><span class="na">sendEmptyMessage</span><span class="o">(</span><span class="n">SHOW_LOADING_DIALOG</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Adds the inflated layout to the view</span>
</span><span class='line'>    <span class="n">addContentView</span><span class="o">(</span><span class="n">mUILayout</span><span class="o">,</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">,</span>
</span><span class='line'>            <span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>還有另外一個<code>Code</code>專門處理<code>Render</code>，在這主要的<code>initApplicationAR</code>當中，先建立一個<code>GLView</code>然後是先前貼的<code>QCARSampleGLView.java</code>接著在<code>initialization</code>放入需要的參數。接著建立<code>Renderer</code>這<code>Code</code>為<code>ImageTargetsRenderer.java</code>寫到這邊我突然很想要把這些Code直接複製就好了，感覺應該是要可以通用才對。總之，建立完<code>GLView</code>需要加入<code>Renderer</code>而在<code>ImageTargetsRenderer.java</code>當中，在繪圖的<code>function</code>為<code>renderFrame()</code>這部分是<code>Native code</code>之後會再繼續補充。最後會把<code>GLView</code>加入到ContentView當中。<code>               addContentView(mGlView, new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));</code>。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ImageTargetsRenderer.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="cm">/*==============================================================================&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;pre&gt;&lt;code&gt;        Copyright (c) 2010-2012 QUALCOMM Austria Research Center GmbH.</span>
</span><span class='line'><span class="cm">        All Rights Reserved.</span>
</span><span class='line'><span class="cm">        Qualcomm Confidential and Proprietary</span>
</span><span class='line'><span class="cm">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;p&gt;@file&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;pre&gt;&lt;code&gt;ImageTargetsRenderer.java</span>
</span><span class='line'><span class="cm">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;p&gt;@brief&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;pre&gt;&lt;code&gt;Sample for ImageTargets</span>
</span><span class='line'><span class="cm">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;p&gt;==============================================================================*/</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">qualcomm</span><span class="o">.</span><span class="na">QCARSamples</span><span class="o">.</span><span class="na">ImageTargets</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">javax.microedition.khronos.egl.EGLConfig</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.microedition.khronos.opengles.GL10</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">android.opengl.GLSurfaceView</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">com.qualcomm.QCAR.QCAR</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span> <span class="n">The</span> <span class="n">renderer</span> <span class="kd">class</span> <span class="nc">for</span> <span class="n">the</span> <span class="n">ImageTargets</span> <span class="n">sample</span><span class="o">.</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ImageTargetsRenderer</span> <span class="kd">implements</span> <span class="n">GLSurfaceView</span><span class="o">.</span><span class="na">Renderer</span>
</span><span class='line'><span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kt">boolean</span> <span class="n">mIsActive</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Reference to main activity **/</span>
</span><span class='line'><span class="kd">public</span> <span class="n">ImageTargets</span> <span class="n">mActivity</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Native function for initializing the renderer. */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">native</span> <span class="kt">void</span> <span class="nf">initRendering</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Native function to update the renderer. */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">native</span> <span class="kt">void</span> <span class="nf">updateRendering</span><span class="o">(</span><span class="kt">int</span> <span class="n">width</span><span class="o">,</span> <span class="kt">int</span> <span class="n">height</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Called when the surface is created or recreated. */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSurfaceCreated</span><span class="o">(</span><span class="n">GL10</span> <span class="n">gl</span><span class="o">,</span> <span class="n">EGLConfig</span> <span class="n">config</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGD</span><span class="o">(</span><span class="s">&quot;GLRenderer::onSurfaceCreated&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Call native function to initialize rendering:</span>
</span><span class='line'>    <span class="n">initRendering</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Call QCAR function to (re)initialize rendering after first use</span>
</span><span class='line'>    <span class="c1">// or after OpenGL ES context was lost (e.g. after onPause/onResume):</span>
</span><span class='line'>    <span class="n">QCAR</span><span class="o">.</span><span class="na">onSurfaceCreated</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Called when the surface changed size. */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSurfaceChanged</span><span class="o">(</span><span class="n">GL10</span> <span class="n">gl</span><span class="o">,</span> <span class="kt">int</span> <span class="n">width</span><span class="o">,</span> <span class="kt">int</span> <span class="n">height</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="n">DebugLog</span><span class="o">.</span><span class="na">LOGD</span><span class="o">(</span><span class="s">&quot;GLRenderer::onSurfaceChanged&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Call native function to update rendering when render surface</span>
</span><span class='line'>    <span class="c1">// parameters have changed:</span>
</span><span class='line'>    <span class="n">updateRendering</span><span class="o">(</span><span class="n">width</span><span class="o">,</span> <span class="n">height</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Call QCAR function to handle render surface size changes:</span>
</span><span class='line'>    <span class="n">QCAR</span><span class="o">.</span><span class="na">onSurfaceChanged</span><span class="o">(</span><span class="n">width</span><span class="o">,</span> <span class="n">height</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/** The native render function. */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">native</span> <span class="kt">void</span> <span class="nf">renderFrame</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Called to draw the current frame. */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onDrawFrame</span><span class="o">(</span><span class="n">GL10</span> <span class="n">gl</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(!</span><span class="n">mIsActive</span><span class="o">)</span>
</span><span class='line'>        <span class="k">return</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Update render view (projection matrix and viewport) if needed:</span>
</span><span class='line'>    <span class="n">mActivity</span><span class="o">.</span><span class="na">updateRenderView</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Call our native function to render content</span>
</span><span class='line'>    <span class="n">renderFrame</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最後我決定，我把這些現有的<code>Code</code>都先複製好了。感覺應該是可以重複使用才對，剩下的就是<code>jni</code>的部分了！讓問題變簡單一點。等之後對<code>OpenGL</code>有更新的認識時，就可以回來補充了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JNI在Eclipse的使用]]></title>
    <link href="http://cychiang.github.com/blog/2013/01/31/jnizai-eclipsede-shi-yong/"/>
    <updated>2013-01-31T13:25:00+08:00</updated>
    <id>http://cychiang.github.com/blog/2013/01/31/jnizai-eclipsede-shi-yong</id>
    <content type="html"><![CDATA[<p>JNI=Java Native Interface，會需要用到這個的原因在於Android的一些效能問題，另外一個原因就是使用vuforia的時候，大部份的Code都會需要用到JNI，可能也是因為效能問題吧！在這邊也是參考一些其他網路的資源然後做個備忘。基本上這個備忘主要是參考<a href="http://ofps.oreilly.com/titles/9781449390501/NDK.html">Learning Android Chapter 15. Native Development Kit</a>，但是…裡面有些範例用的指令到我這邊都不能用，像是<code>javah -jni [command]</code>所以寫出來也備忘一下。整個程式其實也不會說很龐大，主要列出比較重要的部分。那在網站的範例當中是用計算費式數列的例子。而結果如圖所顯示這樣，主要比較JNI和Java下的執行效能，可以發現遞迴運算的影響頗大的。</p>

<p><img src=https://dl.dropbox.com/u/15251095/2013_01_31_ndk/fib_ndk_result.png weight=320 height=240/></p>

<p>現在開始說明程式碼的部分：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>CalcFib.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">esw</span><span class="o">.</span><span class="na">ndk</span><span class="o">.</span><span class="na">calc</span><span class="o">.</span><span class="na">fib</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CalcFib</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">//Java Fib implementation</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">long</span> <span class="nf">JavaFibRecursive</span><span class="o">(</span><span class="kt">long</span> <span class="n">Num</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">Num</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;=</span> <span class="mi">0</span><span class="o">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">Num</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">JavaFibRecursive</span><span class="o">(</span><span class="n">Num</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="n">JavaFibRecursive</span><span class="o">(</span><span class="n">Num</span><span class="o">-</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">long</span> <span class="nf">JavaFibInterative</span><span class="o">(</span><span class="kt">long</span> <span class="n">Num</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">previous</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="k">for</span> <span class="o">(</span><span class="kt">long</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;=</span> <span class="n">Num</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">long</span> <span class="n">sum</span> <span class="o">=</span> <span class="n">result</span> <span class="o">+</span> <span class="n">previous</span><span class="o">;</span>
</span><span class='line'>        <span class="n">previous</span> <span class="o">=</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>        <span class="n">result</span> <span class="o">=</span> <span class="n">sum</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">//Native Fib implementation</span>
</span><span class='line'><span class="kd">static</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">loadLibrary</span><span class="o">(</span><span class="s">&quot;CalcFib&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">native</span> <span class="kt">long</span> <span class="nf">NativeFibRecursive</span><span class="o">(</span><span class="kt">long</span> <span class="n">Num</span><span class="o">);</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">native</span> <span class="kt">long</span> <span class="nf">NativeFibInterative</span><span class="o">(</span><span class="kt">long</span> <span class="n">Num</span><span class="o">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>其實也沒有什麼好說明，就一個java class裡面有四個function兩個Java兩個Native code，在這邊用兩種費式數列計算方式，一個遞迴另外一個是疊代。實驗的結果就像前面所講的。有關於疊代和遞迴這兩種方式的差異，可以Google看看。在這程式碼當中比較重要的是<code>public static native …</code>這段，這部分是宣告這邊是需要透過native的方式進行呼叫需要的Function，就像是在跟Java說，這部分我要丟給別人做一樣。</p>

<p>正常來說，都是可以透過<code>javac xxx.java</code>來轉成<code>xxx.class</code>，而我們所需要做的就是，透過<code>javah [command]</code>的指令來去把需要implement的native code自動轉成jni的header檔，不用自己去動手寫header，算是比較方便，尤其jni的檔一堆莫名的底線。那問題來了，在前面所貼的Blog當中，他用的方法是：</p>

<p><code>
cd $(path_to_project)/bin           //移動到專案資料夾底下的bin資料夾
javah -jni packagename.classname    //執行javah指令來產生先前寫的native function的header
</code></p>

<p>的方式來使用，但是在我這邊不能正常運作，後來試了其他方式，最後變成了：</p>

<p><code>
cd $(path_to_project)/bin           //移動到專案資料夾底下的bin資料夾
javah -classpath $(path_to_project)/bin/classes packagename.classname
</code>
之後就可以在<code>bin</code>資料夾看到<code>classname.h</code>的header檔，在這邊我們的packagename=<code>com.esw.ndk.calc.fib</code>，classname=<code>CalcFib</code>，所以組合起來=<code>com.esw.ndk.calc.fib.CalcFib</code>。接著只要在eclipse的專案當中加入jni的資料夾，接著把header搬過去就可以開始寫native code。這是所自動產生的header檔</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>com_esw_ndk_calc_fib_CalcFib.h  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">DO</span> <span class="n">NOT</span> <span class="n">EDIT</span> <span class="n">THIS</span> <span class="kt">FILE</span> <span class="o">-</span> <span class="n">it</span> <span class="n">is</span> <span class="n">machine</span> <span class="n">generated</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">jni</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">Header</span> <span class="k">for</span> <span class="n">class</span> <span class="n">com_esw_ndk_calc_fib_CalcFib</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifndef</span> <span class="n">_Included_com_esw_ndk_calc_fib_CalcFib</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">_Included_com_esw_ndk_calc_fib_CalcFib</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span> <span class="n">__cplusplus</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Class</span><span class="o">:</span>     <span class="n">com_esw_ndk_calc_fib_CalcFib</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Method</span><span class="o">:</span>    <span class="n">NativeFibRecursive</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Signature</span><span class="o">:</span> <span class="p">(</span><span class="n">J</span><span class="p">)</span><span class="n">J</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="n">Java_com_esw_ndk_calc_fib_CalcFib_NativeFibRecursive</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Class</span><span class="o">:</span>     <span class="n">com_esw_ndk_calc_fib_CalcFib</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Method</span><span class="o">:</span>    <span class="n">NativeFibInterative</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Signature</span><span class="o">:</span> <span class="p">(</span><span class="n">J</span><span class="p">)</span><span class="n">J</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="n">Java_com_esw_ndk_calc_fib_CalcFib_NativeFibInterative</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span> <span class="n">__cplusplus</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>接著建立CalcFib.c的檔案</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>CalcFib.c  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="s">&quot;com_esw_ndk_calc_fib_CalcFib.h&quot;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">long</span> <span class="n">NativeFibRecursive</span><span class="p">(</span><span class="kt">long</span> <span class="n">Num</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span><span class="p">(</span><span class="n">Num</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="n">Num</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="k">return</span> <span class="nf">NativeFibRecursive</span><span class="p">(</span><span class="n">Num</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">NativeFibRecursive</span><span class="p">(</span><span class="n">Num</span><span class="o">-</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span><span class='line'><span class="kt">long</span> <span class="n">NativeFibInterative</span><span class="p">(</span><span class="kt">long</span> <span class="n">Num</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">long</span> <span class="n">previous</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="kt">long</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="kt">long</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="n">Num</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">sum</span> <span class="o">=</span> <span class="n">result</span> <span class="o">+</span> <span class="n">previous</span><span class="p">;</span>
</span><span class='line'>    <span class="n">previous</span> <span class="o">=</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="n">sum</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="n">Java_com_esw_ndk_calc_fib_CalcFib_NativeFibRecursive</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">obj</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">Num</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">return</span> <span class="n">NativeFibRecursive</span><span class="p">(</span><span class="n">Num</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="n">Java_com_esw_ndk_calc_fib_CalcFib_NativeFibInterative</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">obj</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">Num</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">return</span> <span class="n">NativeFibInterative</span><span class="p">(</span><span class="n">Num</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>除了這些東西之外，最重要的就是<code>Android.mk</code>了，<code>Android</code>底下的<code>Makefile</code>檔。</p>

<p>```
LOCAL_PATH := $(call my-dir)</p>

<p>include $(CLEAR_VARS)</p>

<p>LOCAL_MODULE := CalcFib
LOCAL_SRC_FILES := CalcFib.c</p>

<p>include $(BUILD_SHARED_LIBRARY)
```</p>

<p>裡面的變數可以在Google找到，主要都是gcc的定義參數等，用來清理或是紀錄當前目錄和環境變數。最重要的一點是<code>LOCAL_MODULE</code>指的是這個Native library的名稱，經過NDK編譯完成之後，會在前面自動加入<code>lib</code>所以經過NDK編譯之後會變成<code>libCalcFib.so</code>這不用太理會，同樣在載入library時也不用刻意加入lib，所以在前面的Java Code當中用來載入Library的程式碼為其中的CalcFib就是<code>LOCAL_MODULE</code>所指定的名稱。</p>

<p>```
static {</p>

<pre><code>System.loadLibrary("CalcFib");
</code></pre>

<p>}
```
在設定完成之後，開始利用ndk編譯，在ndk的資料夾底下會有：</p>

<ul>
<li>ndk-build</li>
<li>ndk-build.cmd</li>
</ul>


<p>ndk-build這是給Mac/Linux用的，而ndk-build.cmd，這是給windows用的，所以如果有設定eclipse自動編譯的會需要注意，不要去include錯誤的ndk-build否則會吐一堆錯誤。接著只要</p>

<p><code>
cd $(path_to_project)/jni
ndk-build
</code></p>

<p>過程如果沒有意外，就可以產生<code>*.so</code>檔案。對於NDK教學最主要的就是這幾個地方，通常<code>*.so</code>都應該會被自動加入，在建立<code>apk</code>檔案的時候，有時候會發現程式執行的時候找不到<code>ModuleName.so</code>的情況，這很有可能是<code>ndk-build</code>出錯或是某些<code>.so</code>檔沒有找到而且放到專案裡面。</p>
]]></content>
  </entry>
  
</feed>
